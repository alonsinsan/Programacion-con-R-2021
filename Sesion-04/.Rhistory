a <- c("Henry", "Antonio","Iván", "Gerardo", "Daniel", "Juan", "Mariana")
a <- c("Henry", "Antonio","Iván", "Gerardo", "Daniel", "Juan", "Mariana","Jose Carlo")
sample(a,8)
?pivot_longer
setwd("~/personal/BEDU/Programacion con R/Programacion-con-R-2021/Sesion-04")
library(ggplot2)
library(reshape2)
dbinom(x = 20, size = 30, prob = 0.2)
dbinom(x = 20, size = 30, prob = 0.5)
pbinom(q = 20, size = 30, prob = 0.2)
pbinom(q = 10, size = 30, prob = 0.2)
pbinom(q = 0, size = 30, prob = 0.2)
pbinom(q = seq(0,30), size = 30, prob = 0.2)
x <- pbinom(q = seq(0,30), size = 30, prob = 0.2)
plot(x)
plot(x, type = "l")
qbinom(p = 0.35, size = 30, prob = 0.2) # b = 5
pbinom(q = 4, size = 30, prob = 0.2) # P(X <= 4) = 0.2552 < 0.35
muestra <- rbinom(n = 1000, size = 30, prob = 0.2)
muestra
length(muestra); muestra[1:3]
as.data.frame(table(muestra))
(df1 <- as.data.frame(table(muestra)/length(muestra)))
valg <- as.character(df1$muestra) # distintos valores generados por rbinom
(valg <- as.numeric(valg)) # Convertimos a números
(v1 <- round(sapply(valg, dbinom, size = 30, p = 0.2), 3))
View(df1)
(df2 <- cbind(df1, v1))
(names(df2) <- c("Exitos", "FR", "Prob"))
(df2 <- melt(df2)) # función del paquete reshape2
View(df2)
(df2 <- melt(df2)) # función del paquete reshape2
View(df2)
ggplot(df2, aes(x = Exitos, y = value, fill = variable)) +
geom_bar (stat="identity", position = "dodge") # Funciones del paquete ggplot2
set.seed(4857) # Establecemos una semilla, para poder reproducir la muestra en el futuro
muestra <- rbinom(n = 1000, size = 30, prob = 0.2)
length(muestra); muestra[1:3]
as.data.frame(table(muestra))
(df1 <- as.data.frame(table(muestra)/length(muestra)))
valg <- as.character(df1$muestra) # distintos valores generados por rbinom
(valg <- as.numeric(valg)) # Convertimos a números
(v1 <- round(sapply(valg, dbinom, size = 30, p = 0.2), 3))
(df2 <- cbind(df1, v1))
(names(df2) <- c("Exitos", "FR", "Prob"))
(df2 <- melt(df2)) # función del paquete reshape2
View(df2)
ggplot(df2, aes(x = Exitos, y = value, fill = variable)) +
geom_bar (stat="identity", position = "dodge") # Funciones del paquete ggplot2
x <- seq(-4, 4, 0.01)*6 + 175 # Algunos posibles valores que puede tomar la v.a. X (mínimo: mu-4sigma, máximo: mu+4sigma)
x
y <- dnorm(x, mean = 175, sd = 6) # Valores correspondientes de la función de densidad de probabilidad
plot(x, y, type = "l", xlab = "", ylab = "")
y
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
abline(v = 175, lwd = 2, lty = 2) # La media es 175
pnorm(q = 180, mean = 175, sd = 6)
par(mfrow = c(2, 2))
plot(x, y, type = "l", xlab = "", ylab = "")
plot(x, y, type = "l", xlab = "", ylab = "")
pnorm(q = 180, mean = 175, sd = 6)
par(mfrow = c(2, 2))
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
polygon(c(min(x), x[x<=180], 180), c(0, y[x<=180], 0), col="red")
pnorm(q = 180, mean = 175, sd = 6)
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
polygon(c(min(x), x[x<=180], 180), c(0, y[x<=180], 0), col="red")
pnorm(q = 165, mean = 175, sd = 6)
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
polygon(c(min(x), x[x<=165], 165), c(0, y[x<=165], 0), col="yellow")
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
polygon(c(min(x), x[x<=165], 165), c(0, y[x<=165], 0), col="yellow")
dev.off() # Para mostrar solo una gráfica
(b <- qnorm(p = 0.75, mean = 175, sd = 6))
pnorm(b, 175, 6)
plot(x, y, type = "l", xlab="", ylab="")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
axis(side = 1, at = b, font = 2, padj = 1, lwd = 2)
b1 <- qnorm(p=0.25, mean =175, sd=6)
b1
axis(side = 1, at = b1, font=2, padj=1, lwd=2)
set.seed(7563) # Para poder reproducir la muestra en el futuro
muestra <- rnorm(n = 1000, mean = 175, sd = 6)
length(muestra); mdf <- as.data.frame(muestra)
tail(mdf)
ggplot(mdf, aes(muestra)) +
geom_histogram(colour = 'red',
fill = 'blue',
alpha = 0.3, # Intensidad del color fill
binwidth = 3) +
geom_density(aes(y = 3*..count..))+
geom_vline(xintercept = mean(mdf$muestra), linetype="dashed", color = "black") +
ggtitle('Histograma para la muestra normal') +
labs(x = 'Valores obtenidos', y = 'Frecuencia')+
theme_dark() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
boxplot(muestra)
mean <- 175; sd <- 6
x <- seq(mean-4*sd, mean+4*sd, 0.01)
y <- dnorm(x, mean, sd)
plot(x, y, type = "l", xlab="valores", ylab = "", xaxt = "n", yaxt = "n")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste("Regla Empírica con ", mu == 175, " y ", sigma == 6)))
abline(v=mean, lty = 2, lwd = 2)
for(k in c(-3, -2, -1, 1, 2, 3)) abline(v = mean+k*sd, lty = 2, col = abs(k))
ps <- c(mean - 3*sd, mean - 2*sd, mean - sd, mean, mean + sd, mean + 2*sd, mean + 3*sd)
axis(side = 1, at = ps)
x0 <- NULL
for(i in 1:length(ps)-1) x0 <- c(x0, (ps[i]+ps[i+1])/2)
y0 <- dnorm(x0, mean, sd)*1/3
text(x = x0, y = y0, labels = c("2.35%", "13.5%", "34%", "34%", "13.5%", "2.35%"))
x1 <- (x[1]+ps[1])/2; y1 <- dnorm(mean, mean, sd)*1/2
xf <- (x[length(x)]+ps[length(ps)])/2; yf <- dnorm(mean, mean, sd)*1/2
text(x = c(x1, xf), y = c(y1, yf), labels = c("0.15%", "0.15%"))
segments(x0 = x1, y0 = 0, x1 = x1, y1 = y1,               # Draw one line as in Example 1
col = "cornflowerblue",                               # Color of line
lwd = 5,                                              # Thickness of line
lty = "dotted")
segments(x0 = xf, y0 = 0, x1 = xf, y1 = yf,
col = "cornflowerblue",
lwd = 5,
lty = "dotted")
x <- seq(-4, 4, 0.01) # Algunos valores que puede tomar la v.a. T con 7 gl
y <- dt(x, df = 7) # Valores correspondientes de la densidad t de Student con 7 gl
plot(x, y, type = "l", main = "Densidad t de Student, gl = 7", xlab="", ylab="")
abline(v = 0, lwd=2, lty=2)
pt(q = 1.5, df = 7)
plot(x, y, type = "l", main = "Densidad t de Student, gl = 7", xlab="", ylab="")
polygon(c(min(x), x[x<=1.5], 1.5), c(0, y[x<=1.5], 0), col="purple")
pt(q = 2, df = 7, lower.tail = FALSE)
plot(x, y, type = "l", main = "Densidad t de Student, gl = 7", xlab="", ylab="")
polygon(c(2, x[x>=2], max(x)), c(0, y[x>=2], 0), col="orange")
(d <- qt(p = 0.025, df = 7))
pt(q = d, df = 7)
plot(x, y, type = "l", main = "Densidad t de Student, gl = 7", xlab="", ylab="")
axis(side = 1, at = d, font = 2, padj = 1, lwd = 2)
set.seed(777) # Para poder reproducir la muestra en el futuro
muestra <- rt(n = 1000, df = 7)
length(muestra); mdf <- as.data.frame(muestra)
tail(mdf)
ggplot(mdf, aes(muestra)) +
geom_histogram(colour = 'green',
fill = 'orange',
alpha = 0.7, # Intensidad del color fill
binwidth = 0.5) +
geom_density(aes(y = 0.5*..count..))+
geom_vline(xintercept = mean(mdf$muestra), linetype="dashed", color = "black") +
ggtitle('Histograma para la muestra t de Student') +
labs(x = 'Valores obtenidos', y = 'Frecuencia')+
theme_light() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
muestra <- rt(n = 10000, df = 7)
ggplot(mdf, aes(muestra)) +
geom_histogram(colour = 'green',
fill = 'orange',
alpha = 0.7, # Intensidad del color fill
binwidth = 0.5) +
geom_density(aes(y = 0.5*..count..))+
geom_vline(xintercept = mean(mdf$muestra), linetype="dashed", color = "black") +
ggtitle('Histograma para la muestra t de Student') +
labs(x = 'Valores obtenidos', y = 'Frecuencia')+
theme_light() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
muestra <- rt(n = 1000000, df = 7)
ggplot(mdf, aes(muestra)) +
geom_histogram(colour = 'green',
fill = 'orange',
alpha = 0.7, # Intensidad del color fill
binwidth = 0.5) +
geom_density(aes(y = 0.5*..count..))+
geom_vline(xintercept = mean(mdf$muestra), linetype="dashed", color = "black") +
ggtitle('Histograma para la muestra t de Student') +
labs(x = 'Valores obtenidos', y = 'Frecuencia')+
theme_light() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
muestra <- rt(n = 1000000, df = 7)
length(muestra); mdf <- as.data.frame(muestra)
tail(mdf)
ggplot(mdf, aes(muestra)) +
geom_histogram(colour = 'green',
fill = 'orange',
alpha = 0.7, # Intensidad del color fill
binwidth = 0.5) +
geom_density(aes(y = 0.5*..count..))+
geom_vline(xintercept = mean(mdf$muestra), linetype="dashed", color = "black") +
ggtitle('Histograma para la muestra t de Student') +
labs(x = 'Valores obtenidos', y = 'Frecuencia')+
theme_light() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
muestra <- rt(n = 10, df = 7)
length(muestra); mdf <- as.data.frame(muestra)
tail(mdf)
ggplot(mdf, aes(muestra)) +
geom_histogram(colour = 'green',
fill = 'orange',
alpha = 0.7, # Intensidad del color fill
binwidth = 0.5) +
geom_density(aes(y = 0.5*..count..))+
geom_vline(xintercept = mean(mdf$muestra), linetype="dashed", color = "black") +
ggtitle('Histograma para la muestra t de Student') +
labs(x = 'Valores obtenidos', y = 'Frecuencia')+
theme_light() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
library(ggplot2)
x <- seq(0, 5, 0.02)
plot(x, dexp(x, rate = 2), type = "l", lwd = 2, ylab = "")
title(main = "Función de Densidad Exponencial", ylab = "f(x)",
sub = expression("Parámetro " ~ lambda == 2))
text(x = 3, y = 1.5, labels = expression(f(x)==2*exp(-2*x) ~ " para x "  >= 0))
text(x = 3, y = 1.3, labels = paste("0 en otro caso"))
text(x = 1, y = 1, labels = expression("E(X) = " ~ 1/lambda == 1/2), col = 2)
text(x = 3, y = 0.5, labels = expression("DE(X) = " ~ 1/lambda == 1/2), col = 4)
mean(m1.4)
(m1.4 <- rexp(n = 4, rate = 2))
mean(m1.4)
(m1.4 <- rexp(n = 3, rate = 2))
(m1.4 <- rexp(n = 3, rate = 2))
(m1.4 <- rexp(n = 3, rate = 2))
(m1.4 <- rexp(n = 3, rate = 2))
(m1.4 <- rexp(n = 3, rate = 2))
(m5.3 <- sapply(X = rep(3, 5), FUN = rexp, 2))
(media5.3 <- apply(m5.3, 2, mean))
m1000.7 <- sapply(X = rep(7, 1000), FUN = rexp, 2)
media1000.7 <- apply(m1000.7, 2, mean)
mdf <- as.data.frame(media1000.7)
tail(mdf)
ggplot(mdf, aes(media1000.7)) +
geom_histogram(colour = 'green',
fill = 'orange',
alpha = 0.7) + # Intensidad del color fill
geom_vline(xintercept = mean(media1000.7), linetype="dashed", color = "black") +
ggtitle('Histograma para las 1000 medias') +
labs(x = 'medias', y = 'Frecuencia')+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
mean(media1000.7); 1/2 # Media de las 1000 medias y media de la población de la cual vienen las 1000 muestras
sd(media1000.7); (1/2)/sqrt(7) # DE de las 1000 medias y DE de la población de la cual vienen las 1000 muestras dividida por la raíz del tamaño de la muestra
m1000.33 <- sapply(X = rep(33, 1000), FUN = rexp, 2)
media1000.33 <- apply(m1000.33, 2, mean)
mdf <- as.data.frame(media1000.33)
ggplot(mdf, aes(media1000.33)) +
geom_histogram(colour = 'yellow',
fill = 'purple',
alpha = 0.7) + # Intensidad del color fill
geom_vline(xintercept = mean(media1000.33), linetype="dashed", color = "black") +
ggtitle('Histograma para las 1000 medias') +
labs(x = 'medias', y = 'Frecuencia')+
theme_get() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
mean(media1000.33); 1/2 # Media de las 1000 medias y media de la población de la cual vienen las 1000 muestras
m1000.400 <- sapply(X = rep(400, 1000), FUN = rexp, 2)
media1000.400 <- apply(m1000.400, 2, mean)
mdf <- as.data.frame(media1000.400)
ggplot(mdf, aes(media1000.400)) +
geom_histogram(colour = 'orange',
fill = 'gray',
alpha = 0.7) + # Intensidad del color fill
geom_vline(xintercept = mean(media1000.400), linetype="dashed", color = "black") +
ggtitle('Histograma para las 1000 medias') +
labs(x = 'medias', y = 'Frecuencia')+
theme_gray() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
x <- seq(0, 5, 0.02)
plot(x, dexp(x, rate = 3), type = "l", lwd = 2, ylab = "")
title(main = "Función de Densidad Exponencial", ylab = "f(x)",
sub = expression("Parámetro " ~ lambda == 3))
text(x = 3, y = 1.5, labels = expression(f(x)==3*exp(-3*x) ~ " para x "  >= 0))
text(x = 3, y = 1.3, labels = paste("0 en otro caso"))
text(x = 1, y = 1, labels = expression("E(X) = " ~ 1/lambda == 1/3), col = 2)
text(x = 3, y = 0.5, labels = expression("DE(X) = " ~ 1/lambda == 1/3), col = 4)
m1200.350 <- sapply(X = rep(350, 1200), FUN = rexp, rate = 3)
media1200.350 <- apply(m1200.350, 2, mean)
mdf <- as.data.frame(media1200.350)
ggplot(mdf, aes(media1200.350)) +
geom_histogram(colour = 'yellow',
fill = 'purple',
alpha = 0.7) + # Intensidad del color fill
geom_vline(xintercept = mean(media1200.350), linetype="dashed", color = "black") +
ggtitle('Histograma para las 1200 medias') +
labs(x = 'medias', y = 'Frecuencia')+
theme_get() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
mean(media1200.350); 1/3 # Media de las 1200 medias y media de la población de la cual provienen las 1200 muestras
set.seed(345)
sample(x = c(0, 1), size = 1, prob = c(0.45, 0.55))
sample(x = c(0, 1), size = 1, prob = c(0.45, 0.55))
sample(x = c(0, 1), size = 1, prob = c(0.45, 0.55))
sample(x = c(0, 1), size = 1, prob = c(0.45, 0.55))
rbinom(n = 1, size = 1, prob = 0.55)
rbinom(n = 1, size = 1, prob = 0.55)
m1000.31 <- sapply(X = rep(31, 1000), FUN = function(n) sample(x = c(0, 1), size = n, replace = TRUE, prob = c(0.45, 0.55)))
media1000.31 <- apply(m1000.31, 2, mean)
mdf <- as.data.frame(media1000.31)
ggplot(mdf, aes(media1000.31)) +
geom_histogram(colour = 'orange',
fill = 'blue',
alpha = 0.7) + # Intensidad del color fill
geom_vline(xintercept = mean(media1000.31), linetype="dashed", color = "black") +
ggtitle('Histograma para las 1000 medias') +
labs(x = 'medias', y = 'Frecuencia')+
theme_grey() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
mean(media1000.31); 0.55 # Media de las 1000 medias y media de la población de la cual provienen las 1000 muestras
m1150.54 <- sapply(X = rep(54, 1150), FUN = rexp, rate = 3.2)
media1150.54 <- apply(m1150.54, 2, mean)
m1150.41 <- sapply(X = rep(41, 1150), FUN = rexp, rate = 1.5)
media1150.41 <- apply(m1150.41, 2, mean)
dif.medias <- media1150.54 - media1150.41 # Diferencia de medias
dmdf <- as.data.frame(dif.medias)
ggplot(dmdf, aes(dif.medias)) +
geom_histogram(colour = 'orange',
fill = 'red',
alpha = 0.7) + # Intensidad del color fill
geom_vline(xintercept = mean(dif.medias), linetype="dashed", color = "black") +
ggtitle('Histograma para las 1000 diferencias de medias') +
labs(x = 'medias', y = 'Frecuencia')+
theme_grey() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
mean(dif.medias); 1/3.2-1/1.5 # Media de las 1150 diferencias de medias y diferencia de medias de las poblaciones de las cuales provienen las 11500 muestras
m1100.48 <- sapply(X = rep(48, 1100), FUN = function(n) sample(x = c(0, 1), size = n, replace = TRUE, prob = c(0.35, 0.65)))
m1100.35 <- sapply(X = rep(35, 1100), FUN = function(n) sample(x = c(0, 1), size = n, replace = TRUE, prob = c(0.47, 0.53)))
media1100.48 <- apply(m1100.48, 2, mean)
media1100.35 <- apply(m1100.35, 2, mean)
dif.medias <- media1100.48 - media1100.35
dmdf <- as.data.frame(dif.medias)
ggplot(dmdf, aes(dif.medias)) +
geom_histogram(colour = 'pink',
fill = 'blue',
alpha = 0.7) + # Intensidad del color fill
geom_vline(xintercept = mean(dif.medias), linetype="dashed", color = "black") +
ggtitle('Histograma para las 1100 diferencias de medias') +
labs(x = 'medias', y = 'Frecuencia')+
theme_grey() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
mean(dif.medias); 0.65 - 0.53 # Media de las 1100 diferencias de medias y diferencia de medias de las poblaciones de las cuales provienen las muestras
muestra <- rexp(n = 40, rate = 6) # media = 1/6 aprox 0.1667 (media de la población)
tail(as.data.frame(muestra))
z0 <- (mean(muestra)-0.1)/(sd(muestra)/sqrt(40))
z0
(z.05 <- qnorm(p = 0.05, lower.tail = FALSE))
x <- rnorm(1000,0,1)
plot(x, type = "l")
hist(x)
z0
z0 > z.05
(z.05 <- qnorm(p = 0.05, lower.tail = TRUE))
<0
z0
(pvalue <- pnorm(z0, lower.tail = FALSE))
x <- seq(-4, 4, 0.01)
y <- dnorm(x)
plot(x, y, type = "l", xlab="", ylab="")
title(main = "Densidad normal estándar", sub = expression(paste(mu == 0, " y ", sigma == 1)))
polygon(c(z0, x[x>=z0], max(x)), c(0, y[x>=z0], 0), col="red")
axis(side = 1, at = z0, font = 2, padj = 1, lwd = 2)
polygon(c(z0, x[x>=z0], max(x)), c(0, y[x>=z0], 0), col="red")
polygon(c(z0, x[x>=z.05], max(x)), c(0, y[x>=z.05], 0), col="red")
x <- seq(-4, 4, 0.01)
y <- dnorm(x)
plot(x, y, type = "l", xlab="", ylab="")
title(main = "Densidad normal estándar", sub = expression(paste(mu == 0, " y ", sigma == 1)))
polygon(c(z0, x[x>=z.05], max(x)), c(0, y[x>=z.05], 0), col="red")
z.05
z0 <- (mean(muestra)-0.1)/(sd(muestra)/sqrt(40))
z0
(z.05 <- qnorm(p = 0.05, lower.tail = FALSE))
x <- rnorm(1000,0,1)
hist(x)
z0 > z.05
(pvalue <- pnorm(z0, lower.tail = FALSE))
x <- seq(-4, 4, 0.01)
y <- dnorm(x)
plot(x, y, type = "l", xlab="", ylab="")
title(main = "Densidad normal estándar", sub = expression(paste(mu == 0, " y ", sigma == 1)))
polygon(c(z0, x[x>=z.05], max(x)), c(0, y[x>=z.05], 0), col="red")
muestra <- sample(x = c(1, 0), size = 45, replace = TRUE, prob = c(0.67, 0.33)); 0.67 # media real de la población
muestra
z0 <- (mean(muestra)-0.9)/sqrt((0.9*(1-0.9))/45)
z0
(z.05 <- qnorm(p = 0.05))
z0 < z.05
mean(muestra)
(z.05 <- qnorm(p = 0.05, lower.tail =TRUE))
(pvalue <- pnorm(z0)) # p-value muy pequeño
m1 <- rexp(n = 56, rate = 4.1); 1/4.1 # media real de la población
m2 <- rexp(n = 63, rate = 3.4); 1/3.4 # media real de la población
m1
m2
mean(m1); mean(m2)
z0 <- (mean(m1)-mean(m2)-0)/sqrt(var(m1)/56 + var(m2)/63)
z0
(z.025 <- qnorm(p = 0.025, lower.tail = FALSE))
(z0 < -z.025) | (z0 > z.025)
1/4.1
1/3.4
(pvalue <- 2*pnorm(z0, lower.tail = FALSE))
x <- seq(-4, 4, 0.01)
y <- dnorm(x)
plot(x, y, type = "l", xlab="", ylab="")
title(main = "Densidad normal estándar", sub = expression(paste(mu == 0, " y ", sigma == 1)))
polygon(c(min(x), x[x<=-z0], -z0), c(0, y[x<=-z0], 0), col="purple")
axis(side = 1, at = -z0, font = 2, padj = 1, lwd = 2)
polygon(c(z0, x[x>=z0], max(x)), c(0, y[x>=z0], 0), col="purple")
axis(side = 1, at = z0, font = 2, padj = 1, lwd = 2)
muestra <- rnorm(n = 15, mean = 175, sd = 6)
muestra
t0 <- (mean(muestra)-170)/(sd(muestra)/sqrt(15))
t0
(t.05 <- qt(p = 0.05, df = 14, lower.tail = FALSE))
t0 > t.05
mean(muestra)
(pvalue <- pt(t0, df = 14, lower.tail = FALSE))
x <- seq(-5, 5, 0.01)
y <- dt(x, df = 14)
plot(x, y, type = "l", xlab="", ylab="")
plot(x, y, type = "l", xlab="", ylab="")
title(main = "Densidad t de Student, 14 gl")
polygon(c(t0, x[x>=t0], max(x)), c(0, y[x>=t0], 0), col="red")
axis(side = 1, at = t0, font = 2, padj = 1, lwd = 2)
?t.test
#################################################
t.test(x = muestra,
alternative = "greater",
mu = 170)
m1 <- rnorm(n = 23, mean = 175, sd = 3)
m2 <- rnorm(n = 20, mean = 160, sd = 3)
t0 <- (mean(m1)-mean(m2)-0)/(sqrt((22*var(m1)+19*var(m2))/(23+20-2))*sqrt(1/23+1/20))
t0
(t.025 <- qt(p = 0.025, df= 41, lower.tail = FALSE))
(t0 < -t.025) | (t0 > t.025)
(pvalue <- 2*pt(t0, df = 41, lower.tail = FALSE))
mean(m1); mean(m2)
t.test(x = m1, y = m2,
alternative = "two.sided",
mu = 0, paired = FALSE, var.equal = TRUE)
