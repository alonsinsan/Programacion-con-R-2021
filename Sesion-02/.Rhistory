setwd("~/personal/BEDU/Programacion con R/Programacion-con-R-2021/Sesion-02")
x = c(4000, 9000, 9000, 10000); mean(x)
plot(x)
# Para calcular la mediana, utilizamos la función median, por ejemplo
boxplot(x)
x = c(4000, 9000, 9000, 10000); mean(x)
# Para calcular la mediana, utilizamos la función median, por ejemplo
boxplot(x)
x = c(4000, 9000, 9000, 10000); mean(x)
x = c(4000, 9000, 9000, 100000); mean(x)
# Para calcular la mediana, utilizamos la función median, por ejemplo
median(x)
boxplot(x)
x = c(4000, 9000, 9000, 10000, 3000,12000,6000); mean(x)
boxplot(x)
# Para calcular la mediana, utilizamos la función median, por ejemplo
median(x)
# Si lo que deseamos es obtener la moda de un conjunto de mediciones, una
# alternativa es instalar el paquete DescTools en R mediante la instrucción
install.packages("DescTools")#, # luego utilizamos la función Mode del paquete
library(DescTools)
Mode(x) # mode es diferente de Mode (Case sensitive)
x = c(4000, 9000.1, 9000, 10000, 3000, 12000,6000); mean(x)
Mode(x) # mode es diferente de Mode (Case sensitive)
x <- c(29, 13, 62, 4, 63, 96, 1, 90, 50, 46)
quantile(x, 0.25) # cuantil del 25%
boxplot(x)
quantile(x, c(0.25,0.50,0.75)) # Cuartiles
quantile(x, seq(0.1,0.9, by = 0.1)) # Deciles
IQR(x)
quantile(x, probs = 0.75) - quantile(x, probs = 0.25)
quantile(x, 0.25) - 1.5*IQR(x)
quantile(x,0.75) + 1.5*IQR(x)
var(x)
sd(x)
str(iris)
summary(1:100)
summary(mtcars)
set.seed(57)
x <- rnorm(35)
e <- rnorm(35)
y <- 5 + 2*x + e
modelo <- lm(y~x)
View(modelo)
summary(modelo)
x1 <- rnorm(35)
x2 <- rnorm350)
x2 <- rnorm(50)
y <- 5 + 2*x1 +4*x2 + e
x2 <- rnorm(35)
y <- 5 + 2*x1 +4*x2 + e
modelo <- lm(y~x1+x2) # y = a+b*x1+c*x2
summary(modelo)
modelo2 <- lm(y~x1+x2) # y = a+b*x1+c*x2
summary(modelo2)
head(mtcars)
tail(mtcars)
View(iris)
View(mtcars)
moda <- function(vector){
f.abs <- table(vector) # frecuencias absolutas
max.f.abs <- max(f.abs) # obtenemos la máxima frecuencia absoluta
pos.max <- which(f.abs == max.f.abs) # posición(es) de la(s) máxima(s) frecuencia(s) absoluta(s)
print("La(s) moda(s) es(son): ")
print(names(f.abs[pos.max]))
paste("Con una frecuencia de: ", unique(as.vector(f.abs[pos.max])))
}
moda <- function(vector){
f.abs <- table(vector) # frecuencias absolutas
max.f.abs <- max(f.abs) # obtenemos la máxima frecuencia absoluta
pos.max <- which(f.abs == max.f.abs) # posición(es) de la(s) máxima(s) frecuencia(s) absoluta(s)
print("La(s) moda(s) es(son): ")
print(names(f.abs[pos.max]))
paste("Con una frecuencia de: ", unique(as.vector(f.abs[pos.max])))
}
View(moda)
x <- sample(1:100, 100, replace = T) # Tomamos una muestra aleatoria de tamaño 100 con reemplazo de los primeros 100 números naturales
moda(x) # obtenemos la moda de los valores de la muestra
x
mediana <- function(vector){
n <- length(vector) # Número de elementos del vector
vector <- sort(vector) # Ordenamos los valores de menor a mayor
if(n%%2 == 0){ # Si el número de elementos es par hacemos lo siguiente
paste("La mediana es: ", mean(vector[c(n/2, n/2+1)]))
} else{ # De otra manera hacemos lo siguiente
paste("La mediana es: ", vector[round(n/2)])
}
}
mediana(1:10)
mediana(1:11)
suppressMessages(suppressWarnings(library(dplyr)))
url1 <- "https://data.humdata.org/hxlproxy/data/download/time_series_covid19_confirmed_global_narrow.csv?dest=data_edit&filter01=explode&explode-header-att01=date&explode-value-att01=value&filter02=rename&rename-oldtag02=%23affected%2Bdate&rename-newtag02=%23date&rename-header02=Date&filter03=rename&rename-oldtag03=%23affected%2Bvalue&rename-newtag03=%23affected%2Binfected%2Bvalue%2Bnum&rename-header03=Value&filter04=clean&clean-date-tags04=%23date&filter05=sort&sort-tags05=%23date&sort-reverse05=on&filter06=sort&sort-tags06=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_confirmed_global.csv"
url2 <- "https://data.humdata.org/hxlproxy/data/download/time_series_covid19_deaths_global_narrow.csv?dest=data_edit&filter01=explode&explode-header-att01=date&explode-value-att01=value&filter02=rename&rename-oldtag02=%23affected%2Bdate&rename-newtag02=%23date&rename-header02=Date&filter03=rename&rename-oldtag03=%23affected%2Bvalue&rename-newtag03=%23affected%2Binfected%2Bvalue%2Bnum&rename-header03=Value&filter04=clean&clean-date-tags04=%23date&filter05=sort&sort-tags05=%23date&sort-reverse05=on&filter06=sort&sort-tags06=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_deaths_global.csv"
download.file(url = url1, destfile = "st19ncov-confirmados.csv", mode = "wb")
conf <- read.csv("st19ncov-confirmados.csv")
?download.file
download.file(url = url1, destfile = "st19ncov-confirmados.csv", mode = "w")
download.file(url = url2, destfile = "st19ncov-muertes.csv", mode = "w")
conf <- read.csv("st19ncov-confirmados.csv")
mu <- read.csv("st19ncov-muertes.csv")
str(conf); str(mu)
View(conf)
View(mu)
head(conf); head(mu)
View(conf)
Sconf <- conf[-1,]
Smu <- mu[-1,]
View(Sconf)
Sconf1 <- select(Sconf, Country.Region, Date, Value) # País, fecha y acumulado de infectados
Sconf1 <- Sconf %>%
select(Country.Region, Date, Value)
Sconf1 <- rename(Sconf, Pais = Country.Region, Fecha = Date, Infectados = Value)
str(Sconf)
str(Sconf1)
Sconf2 <- Sconf %>%
select(Country.Region, Date, Value) %>%
rename(Sconf, Pais = Country.Region, Fecha = Date, Infectados = Value) %>%
mutate(Fecha = as.Date(Fecha, "%Y-%m-%d")
, Infectados = as.numeric(Infectados))
Sconf2 <- Sconf %>%
select(Country.Region, Date, Value) %>%
rename(Pais = Country.Region, Fecha = Date, Infectados = Value) %>%
mutate(Fecha = as.Date(Fecha, "%Y-%m-%d")
, Infectados = as.numeric(Infectados))
View(Sconf2)
Smu <- select(Smu, Country.Region, Date, Value) # Seleccionamos país, fecha y acumulado de muertos
Smu <- rename(Smu, Pais = Country.Region, Fecha = Date, Muertos = Value) # Renombramos
Smu <- mutate(Smu, Fecha = as.Date(Fecha, "%Y-%m-%d"), Muertos = as.numeric(Muertos)) # Transformamos
Scm <- merge(Sconf2, Smu, by.x = c("Pais", "Fecha"), by.y = c("Pais", "Fecha")) # Unimos infectados y muertos acumulados para cada fecha
View(Scm)
mex <- filter(Scm, Pais == "Mexico") # Seleccionamos sólo a México
View(mex)
mex <- filter(mex, Infectados != 0) # Primer día de infectados
View(mex)
mex <- mutate(mex, NI = c(1, diff(Infectados))) # Nuevos infectados por día
View(mex)
mex <- mutate(mex, NM = c(0, diff(Muertos))) # Nuevos muertos por día
View(mex)
mex <- mutate(mex, Letalidad = round(Muertos/Infectados*100, 1)) # Tasa de letalidad
View(mex)
mex <- mex %>%
mutate(IDA = lag(Infectados), MDA = lag(Muertos),
FCI = Infectados/IDA, FCM = Muertos/MDA,
Dia = 1:dim(mex)[1])
View(mex)
write.csv(mex, "C19Mexico.csv", row.names = FALSE)
View(mex)
cbind(1:10, 11:20, 21:30)
cbind(1:10, matrix(11:30, ncol =2))
cbind(data.frame(x = 1:10, y = 11:20), z = 21:30)
data.frame(x = 1:10, y = 11:20) %>%
mutate(z = 21:30)
df1 <- data.frame(x = 1:5, y = 6:10, z = 16:20)
df2 <- data.frame(x = 51:55, y = 101:105, z = 151:155)
df1; df2
rbind(df1, df2)
df1 %>%
rbind(df2)
df2 <- data.frame(a = 51:55, y = 101:105, z = 151:155)
df1; df2
df1 %>%
rbind(df2)
df1 %>%
bind_rows(df2)
X <- matrix(1:49, ncol = 7)
X
apply(X, 1, mean) # cálculo de la media para las filas
x1 <- apply(X, 1, mean) # cálculo de la media para las filas
apply(X, 2, median) # cálculo de la mediana para las columnas
u1011 <- "https://www.football-data.co.uk/mmz4281/1011/SP1.csv"
u1112 <- "https://www.football-data.co.uk/mmz4281/1112/SP1.csv"
u1213 <- "https://www.football-data.co.uk/mmz4281/1213/SP1.csv"
u1314 <- "https://www.football-data.co.uk/mmz4281/1314/SP1.csv"
download.file(url = u1011, destfile = "SP1-1011.csv", mode = "wb")
download.file(url = u1112, destfile = "SP1-1112.csv", mode = "wb")
download.file(url = u1213, destfile = "SP1-1213.csv", mode = "wb")
download.file(url = u1314, destfile = "SP1-1314.csv", mode = "wb")
dir()
lista <- lapply(dir(), read.csv) # Guardamos los archivos en lista
x <- dir()
x
x <- list.files(".", pattern = ".csv")
x
x <- list.files(".", pattern = "SP1*")
x
lista <- lapply(x, read.csv) # Guardamos los archivos en lista
View(lista)
names(lsita) <- x
names(lista) <- x
View(lista)
lista <- lapply(lista, select, Date:FTR) # seleccionamos solo algunas columnas de cada data frame
View(lista)
lista <- lapply(x, read.csv) # Guardamos los archivos en lista
names(lista) <- x
lista2 <- lapply(lista, select, Date:FTR) # seleccionamos solo algunas columnas de cada data frame
View(lista2)
View(lista)
# Función do.call
# do-call -> (FUN, x)
data <- do.call(rbind, lista)
# Función do.call
# do-call -> (FUN, x)
data <- do.call(rbind, lista2)
View(data)
head(data)
dim(data)
View(lista2)
head(airquality)
str(airquality)
dim(airquality)
bien <- complete.cases(airquality)
bien
sum(bien)
airquality[bien,]
View(airquality)
airquality[complete.cases(airquality)]
airquality[complete.cases(airquality),]
data <- select(airquality, Ozone:Temp)
apply(data, 2, mean)
apply(data, 2, mean, na.rm = T)
data2 <- airquality[complete.cases(airquality),]
apply(data2,2, mean)
(m1 <- apply(na.omit(data), 2, mean))
b <- complete.cases(data)
(m2 <- apply(data[b,], 2, mean))
identical(m1, m2)
View(iris)
# Diferencia entre medias de las variables por especie
iris  %>%
group_by(Species) %>%
summarize(mean_petalLength = mean(Petal.Length))
# Diferencia entre medias de las variables por especie
df1 <- iris  %>%
group_by(Species) %>%
summarize(mean_petalLength = mean(Petal.Length))
View(df1)
# Diferencia entre medias de las variables por especie
df1 <- iris  %>%
group_by(Species) %>%
apply(2,mean)
# Diferencia entre medias de las variables por especie
df1 <- iris  %>%
group_by(Species) %>%
select(-Species) %>%
apply(2,mean)
# Diferencia entre medias de las variables por especie
df1 <- iris  %>%
group_by(Species) %>%
summarize(mean_petalLength = mean(Petal.Length)
, mean_sepalLength = mean(Sepal.Length))
View(df1)
# Diferencia entre medias de las variables por especie
df1 <- iris  %>%
group_by(Species) %>%
summarize(mean_petalLength = mean(Petal.Length)
, mean_sepalLength = mean(Sepal.Length)) %>%
mutate(diferencia = abs(mean_petalLength - mean_sepalLength))
View(df1)
View(df1)
