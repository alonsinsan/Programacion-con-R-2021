setwd("~/personal/BEDU/Programacion con R/Programacion-con-R-2021/Sesion-03")
library(ggplot2)
names(mtcars)
ggplot(mtcars, aes(x=cyl, y = hp, colour = mpg )) +
geom_point()  # Tipo de geometría, intenta utilizar alguna otra
ggplot(mtcars) +
geom_point(aes(x= cyl, y = hp, colour = mpg))
ggplot(mtcars, aes(x=cyl, y = hp, colour = mpg )) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
facet_wrap("cyl")  # Lo divide por el núm de cilindros
ggplot(mtcars, aes(x=carb, y = hp, colour = mpg )) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
facet_wrap("cyl")  # Lo divide por el núm de cilindros
ggplot(mtcars, aes(x = cyl, y = hp, colour = mpg )) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
facet_wrap("cyl") +  # Lo divide por el núm de cilindros
xlab('Núm de cilindros') +  # Nombre en los ejes
ylab('Caballos de Fuerza')
ggplot(mtcars, aes(x = cyl, y = hp, colour = mpg )) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
#facet_wrap("cyl") +  # Lo divide por el núm de cilindros
xlab('Núm de cilindros') +  # Nombre en los ejes
ylab('Caballos de Fuerza') +
geom_label(aes(x=cyl, y =row(mtcars)))
ggplot(mtcars, aes(x = cyl, y = hp, colour = mpg )) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
#facet_wrap("cyl") +  # Lo divide por el núm de cilindros
xlab('Núm de cilindros') +  # Nombre en los ejes
ylab('Caballos de Fuerza') +
geom_text(aes(label = row(mtcars)), vjust = -0.5)
row(mtcars)
mtcars <- require(mtcars)
mtc <- mtcars
data/mtcars
data(mtcars)
my_mtcars <- mtcars
View(mtcars)
my_mtcars <- my_mtcars %>%
mutate(nombre = row.names())
# Agregando nombres a los ejes x, y
library(dplyr)
my_mtcars <- my_mtcars %>%
mutate(nombre = row.names())
my_mtcars <- my_mtcars %>%
mutate(nombre = row.names(my_mtcars))
View(my_mtcars)
ggplot(mtcars, aes(x = cyl, y = hp, colour = mpg )) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
#facet_wrap("cyl") +  # Lo divide por el núm de cilindros
xlab('Núm de cilindros') +  # Nombre en los ejes
ylab('Caballos de Fuerza') +
geom_text(aes(label = nombre), vjust = -0.5)
ggplot(mtcars, aes(x = cyl, y = hp, colour = mpg ))+
geom_text(aes(label = nombre), vjust = -0.5) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
#facet_wrap("cyl") +  # Lo divide por el núm de cilindros
xlab('Núm de cilindros') +  # Nombre en los ejes
ylab('Caballos de Fuerza')
ggplot(my_mtcars, aes(x = cyl, y = hp, colour = mpg ))+
geom_text(aes(label = nombre), vjust = -0.5) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
#facet_wrap("cyl") +  # Lo divide por el núm de cilindros
xlab('Núm de cilindros') +  # Nombre en los ejes
ylab('Caballos de Fuerza')
ggplot(mtcars)
getwd()
data <- read.csv("Data/boxp.csv")
head(data)
str(data)
hist(data$Mediciones, breaks = seq(0,300, 20),
main = "Histograma de Mediciones",
xlab = "Mediciones",
ylab = "Frecuencia")
hist(data$Mediciones, breaks = seq(0,300, 10),
main = "Histograma de Mediciones",
xlab = "Mediciones",
ylab = "Frecuencia")
hist(data$Mediciones, breaks = seq(0,300, 5),
main = "Histograma de Mediciones",
xlab = "Mediciones",
ylab = "Frecuencia")
hist(data$Mediciones, breaks = seq(0,300, 20),
main = "Histograma de Mediciones",
xlab = "Mediciones",
ylab = "Frecuencia")
hist(data$Mediciones, breaks = seq(0,300, 5),
main = "Histograma de Mediciones",
xlab = "Mediciones",
ylab = "Frecuencia")
data <- na.omit(data)
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10)
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 5)
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10, col="black", fill = "blue") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Mediciones") +
theme_light()
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10, col="black", fill = "blue") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Mediciones") +
theme_light() +
facet_wrap("Categoria")
?facet_wrap
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10, col="black", fill = "blue") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Mediciones") +
theme_light() +
facet_wrap("Categoria", ncol =1)
# Tanto hist(), como ggplot() + aes() + geom_histogram() son útiles para generar los histogramas, tu decide cual te funciona mejor.
data %>%
ggplot() +
geom_density(aes(Mediciones))
# Tanto hist(), como ggplot() + aes() + geom_histogram() son útiles para generar los histogramas, tu decide cual te funciona mejor.
data %>%
ggplot() +
geom_density(aes(Mediciones)) +
geom_histogram(binwidth = 10, col="black", fill = "blue")
# Tanto hist(), como ggplot() + aes() + geom_histogram() son útiles para generar los histogramas, tu decide cual te funciona mejor.
data %>%
ggplot() +
geom_density(aes(Mediciones)) +
geom_histogram(aes(Mediciones), binwidth = 10, col="black", fill = "blue")
# Tanto hist(), como ggplot() + aes() + geom_histogram() son útiles para generar los histogramas, tu decide cual te funciona mejor.
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram()+
geom_density()
# Tanto hist(), como ggplot() + aes() + geom_histogram() son útiles para generar los histogramas, tu decide cual te funciona mejor.
ggplot(data, aes(x=Mediciones, y = after_stat(density))) +
geom_histogram() +
geom_density()
# Tanto hist(), como ggplot() + aes() + geom_histogram() son útiles para generar los histogramas, tu decide cual te funciona mejor.
ggplot(data, aes(x=Mediciones, y = after_stat(density))) +
geom_histogram(fill = "blue") +
geom_density()
list.files()
(my_scatplot <- ggplot(mtcars,
aes(x = wt, y = mpg)) +
geom_point())
View(my_scatplot)
(my_scatplot <- ggplot(mtcars,
aes(x=wt,y=mpg)) +
geom_point() +
geom_smooth(method = "lm", se = T))  # modelo lineal, cambia el parametro `se`, este hace referencia al intervalo de confianza
model <- lm(y~x, data = mtcars)
model <- lm(mpg~wt, data = mtcars)
summary(model)
my_scatplot + xlab('Weight (x 1000lbs)') + ylab('Miles per Gallon')
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg, col = cyl)) + geom_point())
my_scatplot + labs(x='Weight (x1000lbs)',y='Miles per Gallon',colour='Number of\n Cylinders')
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg, col = factor(cyl))) + geom_point())
my_scatplot + labs(x='Weight (x1000lbs)',y='Miles per Gallon',colour='Number of\n Cylinders')
my_scatplot + facet_wrap("cyl")
my_scatplot + facet_grid(am~cyl)
dim(mtcars)
plot(mtcars)
corr(mtcars)
cor(mtcars)
f <- cor(mtcars)
View(f)
# Leyendo los datos de la NBa,
nba <- read.csv("players_stats.csv")
names(nba)
# Leyendo los datos de la NBa,
nba <- read.csv("Reto-02/players_stats.csv")
names(nba)
# 1. Histograma de los minuntos totales de losjugadores y la media
mnba <-mean(nba$MIN)
ggplot(nba, aes(MIN))+
geom_histogram(binwidth = 30, col="black", fill = "blue") +
ggtitle("Histograma de Minutos por jugador", paste("Media=",mnba)) +
ylab("Frecuencia") +
xlab("Minutos") +
geom_vline(xintercept =  mnba, col = "red", lwd = 1.5, lty =2)+
theme_light()
ma.nba <-mean(na.omit(nba$Age))
ggplot(nba, aes(Age))+
geom_histogram(binwidth = 2, col="black", fill = "blue") +
ggtitle("Histograma de Edad", paste("Media=",ma.nba)) +
ylab("Frecuencia") +
xlab("Edad") +
geom_vline(xintercept =  ma.nba, col = "red", lwd = 1.5, lty =2)+
theme_light()
table(nba$Age)
p <- nba %>% ggplot(aes(Weight, Height)) +
geom_point()
p
(lmnba <- coef(lm(Height ~ Weight, data = nba)))
#> (Intercept)          MIN
#>   -136.129102   1.193261
p + geom_abline(intercept = lmnba[1], slope = lmnba[2], col = "red", lwd = 1.5, lty = 2)
#4. Jugador más alto
(alto <- which.max(nba$Height))
paste("El jugador más alto es:", nba$Name[alto],"con una altura de:" , round(nba$Height[alto]/100,2), "m")
#5. Jugador más bajo
(bajito <- which.min(nba$Height))
paste("El jugador más bajito es:", nba$Name[bajito],"con una altura de:" ,round(nba$Height[bajito]/100,2), "m")
#6. La altura promedio, (Hint: hay que utilizar na.omit en caso de presencia de NA´s)
(altura.m <- mean(na.omit(nba$Height)))
paste("La altura promedio es:", round(altura.m/100,2),"m")
# 7. Scatterplot de Asistencias totales vs Puntos, con un face wrap por posición.
nba %>% ggplot( aes(AST.TOV, PTS )) +
geom_point() +
facet_wrap("Pos")
# Comenzamos leyendo un fichero, el cual contiene información sobre dos grupos de control G1 y G2, a los cuales se les realizó a cada uno una medición en 3 momentos diferentes C1, C2 y C3
# library(dplyr) # para usar mutate
data <- read.csv("boxp.csv")
# Comenzamos leyendo un fichero, el cual contiene información sobre dos grupos de control G1 y G2, a los cuales se les realizó a cada uno una medición en 3 momentos diferentes C1, C2 y C3
# library(dplyr) # para usar mutate
data <- read.csv("Data/boxp.csv")
View(data)
summary(data)
str(data)
summary(data)
bien <- complete.cases(data)
data <- data[bien,]
summary(data)
data <- mutate(data, Categoria = factor(Categoria), Grupo = factor(Grupo))
str(data)
ggplot(data, aes(x = Categoria, y = Mediciones, fill = Grupo)) + geom_boxplot() +
ggtitle("Boxplots") +
xlab("Categorias") +
ylab("Mediciones")
ggplot(data, aes(x = Categoria, y = Mediciones, fill = Grupo)) + geom_boxplot() +
scale_fill_discrete(name = "Dos Gps", labels = c("G1", "G2")) +
ggtitle("Boxplots") +
xlab("Categorias") +
ylab("Mediciones")
ggplot(data, aes(x = Categoria, y = Mediciones, fill = Grupo)) + geom_violin() +
ggtitle("Boxplots") +
xlab("Categorias") +
ylab("Mediciones")
ggplot(data, aes(x = Categoria, y = Mediciones, fill = Grupo)) + geom_boxplot() +
ggtitle("Boxplots") +
xlab("Categorias") +
ylab("Mediciones")
library(DescTools)
data %>%
group_by(Categorias, Grupo) %>%
summarize(iqr = IQR())
data %>%
group_by(Categoria, Grupo) %>%
summarize(iqr = IQR())
data %>%
group_by(Categoria, Grupo) %>%
summarize(iqr = IQR(Mediciones))
data %>%
group_by(Categoria, Grupo) %>%
summarize(iqr = IQR(Mediciones)
, q25 = quantile(Mediciones, 0.25)
, q75 = quantile(Mediciones, 0.75))
data %>%
group_by(Categoria, Grupo) %>%
summarize(iqr = IQR(Mediciones)
, q25 = quantile(Mediciones, 0.25)
, q75 = quantile(Mediciones, 0.75)) %>%
mutate(lim_inf = q25 - 1.5*iqr,
lim_sup = q75 + 1.5*iqr)
# library(ggplot2)
# install.packages("scales")
library(scales) # Para mejorar la lectura de las etiquetas  en el eje de las x de tipo fecha
list.files()
list.files("Data")
library(readr)
C19Mexico <- read_csv("~/personal/BEDU/Programacion con R/Programacion-con-R-2021/Sesion-02/C19Mexico.csv")
View(C19Mexico)
mex <- C19Mexico
head(mex); tail(mex)
str(mex)
View(mex)
p <- ggplot(mex, aes(x=Fecha, y=Infectados)) +
geom_line( color="blue") +
geom_point() +
labs(x = "Fecha",
y = "Acumulado de casos confirmados",
title = paste("Confirmados de COVID-19 en México:",
format(Sys.time(),
tz="America/Mexico_City",
usetz=TRUE))) +
theme(plot.title = element_text(size=12))  +
theme(axis.text.x = element_text(face = "bold", color="#993333" ,
size = 10, angle = 45,
hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" ,
size = 10, angle = 45,
hjust = 1))  # color, ángulo y estilo de las abcisas y ordenadas
p <- p  + scale_x_date(labels = date_format("%d-%m-%Y")) # paquete scales
p <- p  + scale_x_date(labels = date_format("%d-%m-%Y")) # paquete scales
p <- p +
theme(plot.margin=margin(10,10,20,10), plot.caption=element_text(hjust=1.05, size=10)) +
annotate("text", x = mex$Fecha[round(dim(mex)[1]*0.4)], y = max(mex$Infectados), colour = "blue", size = 5, label = paste("Última actualización: ", mex$Infectados[dim(mex)[1]]))
p
p <- ggplot(mex, aes(x=Fecha, y=Infectados)) +
geom_line( color="blue") +
geom_point() +
labs(x = "Fecha",
y = "Acumulado de casos confirmados",
title = paste("Confirmados de COVID-19 en México:",
format(Sys.time(),
tz="America/Mexico_City",
usetz=TRUE))) +
theme(plot.title = element_text(size=12))  +
theme(axis.text.x = element_text(face = "bold", color="#993333" ,
size = 10, angle = 90,
hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" ,
size = 10, angle = 90,
hjust = 1))  # color, ángulo y estilo de las abcisas y ordenadas
p <- p  + scale_x_date(labels = date_format("%d-%m-%Y")) # paquete scales
p <- p +
theme(plot.margin=margin(10,10,20,10), plot.caption=element_text(hjust=1.05, size=10)) +
annotate("text", x = mex$Fecha[round(dim(mex)[1]*0.4)], y = max(mex$Infectados), colour = "blue", size = 5, label = paste("Última actualización: ", mex$Infectados[dim(mex)[1]]))
p
p1 <- ggplot(mex, aes(x=Fecha, y=NI)) +
geom_line(stat = "identity") +
labs(x = "Fecha", y = "Incidencia (Número de casos nuevos)",
title = paste("Casos de Incidencia de COVID-19 en México:",
format(Sys.time(),
tz="America/Mexico_City", usetz=TRUE))) +
theme(plot.title = element_text(size=12))  +
theme(axis.text.x = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1))  # color, Ángulo y estilo de las abcisas y ordenadas
p1 <- p1  + scale_x_date(labels = date_format("%d-%m-%Y")) # paquete scales
p1
p1 <- p1 +
theme(plot.margin=margin(10,10,20,10), plot.caption=element_text(hjust=1.05, size=10)) +
annotate("text", x = mex$Fecha[round(dim(mex)[1]*0.4)], y = max(mex$NI), colour = "blue", size = 5,
label = paste("Última actualización: ", mex$NI[length(mex$NI)]))
p1
p <- ggplot(mex %>% filter(FCM < Inf), aes(x=Fecha, y=FCI)) + geom_line(color="blue") +
labs(x = "Fecha",
y = "Factor de crecimiento",
title = paste("COVID-19 en México:", format(Sys.time(), tz="America/Mexico_City",usetz=TRUE))) +
geom_line(aes(y = FCM), color = "red") + theme(plot.title = element_text(size=12)) +
theme(axis.text.x = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1))  # color, Ángulo y estilo de las abcisas y ordenadas
p <- ggplot(mex %>% filter(FCM < Inf), aes(x=Fecha, y=FCI)) + geom_line(color="blue") +
labs(x = "Fecha",
y = "Factor de crecimiento",
title = paste("COVID-19 en México:", format(Sys.time(), tz="America/Mexico_City",usetz=TRUE))) +
geom_line(aes(y = FCM), color = "red") + theme(plot.title = element_text(size=12)) +
theme(axis.text.x = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1))  # color, Ángulo y estilo de las abcisas y ordenadas
p <- p  + scale_x_date(labels = date_format("%m-%d-%Y"))
p <- p +
annotate("text", x = mex$Fecha[round(length(mex$Fecha)*0.4)], y = max(mex$FCM), colour = "blue", size = 5, label = paste("Última actualización para infectados: ", round(mex$FCI[dim(mex)[1]], 4))) +
annotate("text", x = mex$Fecha[round(length(mex$Fecha)*0.4)], y = max(mex$FCM)-0.2, colour = "red", size = 5, label = paste("Última actualización para muertes: ", round(mex$FCM[dim(mex)[1]], 4)))
p
p <- ggplot(mex %>% filter(FCM < Inf), aes(x=Fecha, y=FCI)) + geom_line(color="blue") +
labs(x = "Fecha",
y = "Factor de crecimiento",
title = paste("COVID-19 en México:", format(Sys.time(), tz="America/Mexico_City",usetz=TRUE))) +
geom_line(aes(y = FCM), color = "red") + theme(plot.title = element_text(size=12)) +
theme(axis.text.x = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1))  # color, Ángulo y estilo de las abcisas y ordenadas
p <- p  + scale_x_date(labels = date_format("%Y%m%d"))
p <- p +
annotate("text", x = mex$Fecha[round(length(mex$Fecha)*0.4)], y = max(mex$FCM), colour = "blue", size = 5, label = paste("Última actualización para infectados: ", round(mex$FCI[dim(mex)[1]], 4))) +
annotate("text", x = mex$Fecha[round(length(mex$Fecha)*0.4)], y = max(mex$FCM)-0.2, colour = "red", size = 5, label = paste("Última actualización para muertes: ", round(mex$FCM[dim(mex)[1]], 4)))
p
p <- ggplot(mex %>% filter(FCM < Inf), aes(x=Fecha, y=FCI)) + geom_line(color="blue") +
labs(x = "Fecha",
y = "Factor de crecimiento",
title = paste("COVID-19 en México:", format(Sys.time(), tz="America/Mexico_City",usetz=TRUE))) +
geom_line(aes(y = FCM), color = "red") + theme(plot.title = element_text(size=12)) +
theme(axis.text.x = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1))  # color, Ángulo y estilo de las abcisas y ordenadas
p <- p  + scale_x_date(labels = date_format("%B"))
p <- p +
annotate("text", x = mex$Fecha[round(length(mex$Fecha)*0.4)], y = max(mex$FCM), colour = "blue", size = 5, label = paste("Última actualización para infectados: ", round(mex$FCI[dim(mex)[1]], 4))) +
annotate("text", x = mex$Fecha[round(length(mex$Fecha)*0.4)], y = max(mex$FCM)-0.2, colour = "red", size = 5, label = paste("Última actualización para muertes: ", round(mex$FCM[dim(mex)[1]], 4)))
p
p <- ggplot(mex %>% filter(FCM < Inf), aes(x=Fecha, y=FCI)) + geom_line(color="blue") +
labs(x = "Fecha",
y = "Factor de crecimiento",
title = paste("COVID-19 en México:", format(Sys.time(), tz="America/Mexico_City",usetz=TRUE))) +
geom_line(aes(y = FCM), color = "red") + theme(plot.title = element_text(size=12)) +
theme(axis.text.x = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1))  # color, Ángulo y estilo de las abcisas y ordenadas
p <- p  + scale_x_date(labels = date_format("%B-%Y"))
p <- p +
annotate("text", x = mex$Fecha[round(length(mex$Fecha)*0.4)], y = max(mex$FCM), colour = "blue", size = 5, label = paste("Última actualización para infectados: ", round(mex$FCI[dim(mex)[1]], 4))) +
annotate("text", x = mex$Fecha[round(length(mex$Fecha)*0.4)], y = max(mex$FCM)-0.2, colour = "red", size = 5, label = paste("Última actualización para muertes: ", round(mex$FCM[dim(mex)[1]], 4)))
p
View(mex)
fechas <- seq(as.Date("2022-01-01"), as.Date("2023-12-01"), by "month")
fechas <- seq(as.Date("2022-01-01"), as.Date("2023-12-01"), by = "month")
fechas
valor <- runif(24,0,1)
valor <- runif(24,0,100)
serie <- data.frame(fecha = fechas, valor = valor)
View(serie)
library(datasets)
(AP <- AirPassengers) # Número de pasajeros (en miles) por mes de una aerolínea
(AP <- AirPassengers) # Número de pasajeros (en miles) por mes de una aerolínea
start(AP); end(AP); frequency(AP)
plot
plot(AP, main = "Pasajeros mensuales en una aerolínea", ylab = "Número de pasajeros (en miles)", xlab = "Mes")
class(AP)
comp <- decompose(AP, type = "multiplicative")
View(comp)
plot(comp)
plot(comp$trend, col = "purple", lwd = 2, main = "Componente de tendencia", ylab = "Tendencia", xlab = "Mes")  # Gráfica de la tendencia
plot(comp$seasonal, col = "red", lwd = 2, main = "Componente de estacionalidad", ylab = "Estacionalidad", xlab = "Mes") # Gráfica de la estacionalidad
plot(AP, main = "Pasajeros mensuales en una aerolínea", ylab = "Número de pasajeros (en miles)", xlab = "Mes", ylim = c(100, 800))
lines(comp$trend , col = "purple", lwd = 2)
lines(comp$seasonal * comp$trend, col = "red", lty = 2, lwd = 2 )
legend(1949, 800,
c('Serie de tiempo original', 'Tendencia', 'Tendencia x Estacionalidad'),
col = c('black', 'purple', 'red'), text.col = "green4", lty = c(1, 1, 2), lwd = c(1, 2, 2),
merge = TRUE, bg = 'gray90')
list.files(".", pattern = "cbe.csv", full.names = T, recursive = T)
CBE <- read.csv("Reto-03/cbe.csv")
View(CBE)
View(CBE)
Elec.ts <- ts(CBE[, 3], start = 1958, freq = 12)
Elec.ts
Elec.decom.M <- decompose(Elec.ts, type = "mult")
plot(Elec.decom.M, xlab = "Tiempo",
sub = "Descomposición de los datos de producción de electricidad")
Trend <- Elec.decom.M$trend
Seasonal <- Elec.decom.M$seasonal
Random <- Elec.decom.M$random
ts.plot(cbind(Trend, Trend*Seasonal), xlab = "Tiempo", main = "Datos de Producción de Electricidad",
ylab = "Producción de electricidad", lty = 1:2,
sub = "Tendencia con efectos estacionales multiplicativos sobrepuestos")
Trend[7]*Seasonal[7]*Random[7]
Elec.ts[7]
