a <- c("Henry", "Antonio","Iván", "Gerardo", "Daniel", "Juan", "Mariana")
a <- c("Henry", "Antonio","Iván", "Gerardo", "Daniel", "Juan", "Mariana","Jose Carlo")
sample(a,8)
?pivot_longer
setwd("~/personal/BEDU/Programacion con R/Programacion-con-R-2021/Sesion-03")
library(ggplot2)
names(mtcars)
str(mtcars)
summary(mtcars)
ggplot(mtcars, aes(x=cyl, y = hp, colour = mpg)) +
geom_point()  # Tipo de geometría, intenta utilizar alguna otra
ggplot(mtcars) +
geom_boxplot(aes(x=cyl, y = hp)) +
ggtitle("Caja de brazos por # de cilindros")
ggplot(mtcars) +
geom_boxplot(aes(x=cyl, y = hp, group = cyl)) +
ggtitle("Caja de brazos por # de cilindros")
names(mtcars)
ggplot(mtcars, aes(x=cyl, y = hp, colour = mpg)) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
facet_wrap("cyl")  # Lo divide por el núm de cilindros
ggplot(mtcars, aes(x=cyl, y = hp, colour = mpg)) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
facet_wrap("am")  # Lo divide por el núm de cilindros
ggplot(mtcars, aes(x=cyl, y = hp, colour = mpg)) +
geom_boxplot() +
theme_gray() +   # Temas (inteta cambiarlo)
facet_wrap("am")
ggplot(mtcars, aes(x=cyl, y = hp, group = cyl)) +
geom_boxplot() +
theme_gray() +   # Temas (inteta cambiarlo)
facet_wrap("am")
?facet_wrap
ggplot(mtcars, aes(x=cyl, y = hp, group = cyl)) +
geom_boxplot() +
theme_gray() +   # Temas (inteta cambiarlo)
facet_wrap("am", ncol = 1)
ggplot(mtcars, aes(x = cyl, y = hp, colour = mpg )) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
facet_wrap("cyl") +  # Lo divide por el núm de cilindros
xlab('Núm de cilindros') +  # Nombre en los ejes
ylab('Caballos de Fuerza')
ggplot(mtcars, aes(x = cyl, y = hp, colour = mpg )) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
facet_wrap("cyl") +  # Lo divide por el núm de cilindros
xlab('Núm de cilindros') +  # Nombre en los ejes
ylab('Caballos de Fuerza') +
ggtitle("Gráfico de dispersión cyl vs hp por cyl")
library(dplyr) # Para usar el operador %>%
data <- read.csv("Sesion-03/Data/boxp.csv")
getwd()
data <- read.csv("Data/boxp.csv")
head(data)
names(data)
summary(data)
data$Mediciones
hist(data$Mediciones, breaks = seq(0,300, 20),
main = "Histograma de Mediciones",
xlab = "Mediciones",
ylab = "Frecuencia")
hist(data$Mediciones, breaks = seq(0,300, 1),
main = "Histograma de Mediciones",
xlab = "Mediciones",
ylab = "Frecuencia")
hist(data$Mediciones, breaks = seq(0,300, 100),
main = "Histograma de Mediciones",
xlab = "Mediciones",
ylab = "Frecuencia")
hist(data$Mediciones, breaks = seq(0,300, 20),
main = "Histograma de Mediciones",
xlab = "Mediciones",
ylab = "Frecuencia")
data <- na.omit(data)
seq(0,300, 20)
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10)
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10, col="black", fill = "blue") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Mediciones") +
theme_light()
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10, col="black", fill = "yellow") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Mediciones") +
theme_light()
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10)
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10, col="black", fill = "yellow") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Mediciones") +
theme_light()
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10, col="black", fill = "yellow") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Mediciones") +
theme_light()
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10, col="black", fill = "yellow") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Mediciones") +
theme_light() +
annotate("A partir del 100 disminuye el número de observaciones", x= 150, y = 75)
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10, col="black", fill = "yellow") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Mediciones") +
theme_light() +
annotate("text", x= 150, y = 75, label = "A partir del 100 disminuye el número de observaciones")
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10, col="black", fill = "yellow") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Mediciones") +
theme_light() +
annotate("text", x= 150, y = 75, label = "A partir del 100 \n disminuye el número de observaciones")
data %>%
ggplot() +
aes(Mediciones) +
geom_histogram(binwidth = 10, col="black", fill = "yellow") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Mediciones") +
theme_light() +
annotate("text", x= 170, y = 75, label = "A partir del 100 \n disminuye el número de observaciones")
getwd()
altura <- read.csv("Reto-01/BD_Altura_Alunos.csv", sep = ";")
View(altura)
#realizando el histograma con la función hist()
hist(altura$Altura,
breaks = 20,
main = " Histograma de alturas",
ylab = "Frecuencia",
xlab = "Altura",
col = "blue")
#realizando el histograma con la función ggplot()
ggplot(altura, aes(Altura))+
geom_histogram(binwidth = 4, col="black", fill = "blue") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Alturas") +
theme_light()
?geom_histogram
#realizando el histograma con la función hist()
hist(altura$Altura,
breaks = 20,
main = " Histograma de alturas",
ylab = "Frecuencia",
xlab = "Altura",
col = "blue")
#realizando el histograma con la función ggplot()
ggplot(altura, aes(Altura))+
geom_histogram(bins = 20, col="black", fill = "blue") +
ggtitle("Histograma de Mediciones") +
ylab("Frecuencia") +
xlab("Alturas") +
theme_light()
data <- read.csv("Reto-01/BD_Altura_Alunos.csv", sep = ";")
View(data)
data <- as.data.frame(data)
data <- read.csv("Reto-01/BD_Altura_Alunos.csv", sep = ";", col.names = c("alumno", "altura"))
data2 <- read.csv("Reto-01/BD_Altura_Alunos.csv", sep = ";")
colnames(data2) <- c("alumno", "altura")
(my_scatplot <- ggplot(mtcars,
aes(x = wt, y = mpg)) +
geom_point())
(my_scatplot <- ggplot(mtcars,
aes(x=wt,y=mpg)) +
geom_point() +
geom_smooth(method = "lm", se = T))  # modelo lineal, cambia el parametro `se`, este hace referencia al intervalo de confianza
my_scatplot + xlab('Weight (x 1000lbs)') + ylab('Miles per Gallon')
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg, col = cyl)) + geom_point())
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg, col = as.factor(cyl))) + geom_point())
my_scatplot + labs(x='Weight (x1000lbs)',y='Miles per Gallon',colour='Number of\n Cylinders')
my_scatplot + facet_wrap("cyl")
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg, col = as.factor(cyl))) + geom_point())
my_scatplot + labs(x='Weight (x1000lbs)',y='Miles per Gallon',colour='Number of\n Cylinders')
my_scatplot + facet_wrap("am")
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg, col = as.factor(cyl))) + geom_point())
my_scatplot + facet_wrap("cyl")
my_scatplot + facet_grid(am~cyl)
my_scatplot + labs(x='Weight (x1000lbs)',y='Miles per Gallon',colour='Number of\n Cylinders')
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg, col = as.factor(cyl))) + geom_point())
my_scatplot + labs(x='Weight (x1000lbs)',y='Miles per Gallon',colour='Number of\n Cylinders')
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg, col = as.factor(cyl))) + geom_point())
my_scatplot <- my_scatplot + labs(x='Weight (x1000lbs)',y='Miles per Gallon',colour='Number of\n Cylinders')
my_scatplot
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg, col = as.factor(cyl))) + geom_point())
(my_scatplot <- my_scatplot + labs(x='Weight (x1000lbs)',y='Miles per Gallon',colour='Number of\n Cylinders'))
my_scatplot + facet_grid(am~cyl)
names(mtcars)
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg, col = as.factor(cyl))) + geom_point())
(my_scatplot <- my_scatplot + labs(x='Weight (x1000lbs)',y='Miles per Gallon',colour='Number of\n Cylinders'))
# Leyendo los datos de la NBa,
nba <- read.csv("players_stats.csv")
getwd()
# Leyendo los datos de la NBa,
nba <- read.csv("Reto-02/players_stats.csv")
# 1. Histograma de los minuntos totales de losjugadores y la media
mnba <- mean(nba$MIN)
ggplot(nba, aes(MIN))+
geom_histogram(binwidth = 30, col="black", fill = "blue") +
ggtitle("Histograma de Minutos por jugador", paste("Media=",mnba)) +
ylab("Frecuencia") +
xlab("Minutos") +
geom_vline(xintercept =  mnba, col = "red", lwd = 1.5, lty =2)+
theme_light()
ma.nba <-mean(nba$Age, na.rm=T)
ggplot(nba, aes(Age))+
geom_histogram(binwidth = 2, col="black", fill = "blue") +
ggtitle("Histograma de Edad", paste("Media=",ma.nba)) +
ylab("Frecuencia") +
xlab("Edad") +
geom_vline(xintercept =  ma.nba, col = "red", lwd = 1.5, lty =2)+
theme_light()
p <- nba %>% ggplot(aes(Weight, Height)) +
geom_point()
p
p + geom_smooth(method = 'lm', se =T)
#> (Intercept)          MIN
#>   -136.129102   1.193261
p + geom_abline(intercept = lmnba[1], slope = lmnba[2], col = "red", lwd = 1.5, lty = 2)
(lmnba <- coef(lm(Height ~ Weight, data = nba)))
#> (Intercept)          MIN
#>   -136.129102   1.193261
p + geom_abline(intercept = lmnba[1], slope = lmnba[2], col = "red", lwd = 1.5, lty = 2)
#4. Jugador más alto
(alto <- which.max(nba$Height))
paste("El jugador más alto es:", nba$Name[alto],"con una altura de:" , round(nba$Height[alto]/100,2), "m")
#5. Jugador más bajo
(bajito <- which.min(nba$Height))
nba$Name
paste("El jugador más bajito es:", nba$Name[bajito],"con una altura de:" ,round(nba$Height[bajito]/100,2), "m")
#6. La altura promedio, (Hint: hay que utilizar na.omit en caso de presencia de NA´s)
(altura.m <- mean(na.omit(nba$Height)))
paste("La altura promedio es:", round(altura.m/100,2),"m")
# 7. Scatterplot de Asistencias totales vs Puntos, con un face wrap por posición.
nba %>% ggplot( aes(AST.TOV, PTS )) +
geom_point() +
facet_wrap("Pos")
# 2. Histograma de edad y media
hist(nba$Age)
p <- nba %>% ggplot(aes(Weight, Height)) +
geom_point()
p
p + geom_rug()
install.packages('ggExtra')
library(ggExtra)
ggMarginal(p, type="histogram")
ggMarginal(p, type="density")
ggMarginal(p, type="histogram")
p <- nba %>% ggplot(aes(Weight, Height)) +
geom_point() +
geom_hline(yintercept= 197)
ggMarginal(p, type="histogram")
# Comenzamos leyendo un fichero, el cual contiene información sobre dos grupos de control G1 y G2, a los cuales se les realizó a cada uno una medición en 3 momentos diferentes C1, C2 y C3
# library(dplyr) # para usar mutate
data <- read.csv("Data/boxp.csv")
head(data)
names(data)
summary(data)
bien <- complete.cases(data)
data <- data[bien,]
data <- mutate(data, Categoria = factor(Categoria), Grupo = factor(Grupo))
ggplot(data, aes(x = Categoria, y = Mediciones, fill = Grupo)) + geom_boxplot() +
ggtitle("Boxplots") +
xlab("Categorias") +
ylab("Mediciones")
ggplot(data, aes(x = Categoria, y = Mediciones, fill = Grupo)) + geom_boxplot() +
scale_fill_discrete(name = "Dos Gps", labels = c("G1", "G2")) +
ggtitle("Boxplots") +
xlab("Categorias") +
ylab("Mediciones")
View(data)
mex <- read.csv("Data/C19Mexico.csv")
head(mex); tail(mex)
mex <- mutate(mex, Fecha = as.Date(Fecha, "%Y-%m-%d"))
p <- ggplot(mex, aes(x=Fecha, y=Infectados)) +
geom_line( color="blue") +
geom_point() +
labs(x = "Fecha",
y = "Acumulado de casos confirmados",
title = paste("Confirmados de COVID-19 en México:",
format(Sys.time(),
tz="America/Mexico_City",
usetz=TRUE))) +
theme(plot.title = element_text(size=12))  +
theme(axis.text.x = element_text(face = "bold", color="#993333" ,
size = 10, angle = 45,
hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" ,
size = 10, angle = 45,
hjust = 1))  # color, ángulo y estilo de las abcisas y ordenadas
p
p <- p  + scale_x_date(labels = date_format("%d-%m-%Y")) # paquete scales
# library(ggplot2)
# install.packages("scales")
library(scales) # Para mejorar la lectura de las etiquetas  en el eje de las x de tipo fecha
p <- p  + scale_x_date(labels = date_format("%d-%m-%Y")) # paquete scales
p
p  + scale_x_date(labels = date_format("%B-%Y"))
p  + scale_x_date(labels = date_format("%q-%Y"))
p <- p  + scale_x_date(labels = date_format("%d-%m-%Y")) # paquete scales
p <- p +
theme(plot.margin=margin(10,10,20,10), plot.caption=element_text(hjust=1.05, size=10)) +
annotate("text", x = mex$Fecha[round(dim(mex)[1]*0.4)], y = max(mex$Infectados), colour = "blue", size = 5, label = paste("Última actualización: ", mex$Infectados[dim(mex)[1]]))
p
View(mex)
p <- ggplot(mex, aes(x=Fecha, y=NI)) +
geom_line(stat = "identity") +
labs(x = "Fecha", y = "Incidencia (Número de casos nuevos)",
title = paste("Casos de Incidencia de COVID-19 en México:",
format(Sys.time(),
tz="America/Mexico_City", usetz=TRUE))) +
theme(plot.title = element_text(size=12))  +
theme(axis.text.x = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" , size = 10, angle = 45, hjust = 1))  # color, Ángulo y estilo de las abcisas y ordenadas
p <- p  + scale_x_date(labels = date_format("%d-%m-%Y")) # paquete scales
p
library(dplyr)
datos <- read.csv('Data/dummy.csv')
View(datos)
summary(datos)
datos <- datos %>%
mutate(semana = as.Date(semana)
, id_cliente = factor(id_cliente))
datos <- datos %>%
mutate(semana = as.Date(semana)
, id_client = factor(id_client))
View(datos)
resumen1 <- datos %>%
group_by(semana) %>%
summarize(n_cliente = n_unique(id_cliente))
resumen1 <- datos %>%
group_by(semana) %>%
summarize(n_cliente = n_distinct(id_client))
View(resumen1)
resumen2 <- datos %>%
mutate(categoria_riesgo = ifelse(probabilidad<0.7, "baja", ifelse(probabilidad < 0.85, "media", "alta"))) %>%
group_by(semana, categoria_riesgo) %>%
summarize(n_clientes = n_distinct(id_cliente))
resumen2 <- datos %>%
mutate(categoria_riesgo = ifelse(probabilidad<0.7, "baja", ifelse(probabilidad < 0.85, "media", "alta"))) %>%
group_by(semana, categoria_riesgo) %>%
summarize(n_clientes = n_distinct(id_client))
View(resumen2)
resumen2 <- datos %>%
mutate(categoria_riesgo = ifelse(probabilidad<0.7, "baja", ifelse(probabilidad < 0.85, "media", "alta"))) %>%
group_by(semana, categoria_riesgo) %>%
summarize(n_clientes = n_distinct(id_client)) %>%
tidyr::pivot_wider(id_cols = "categoria_riesgo")
?pivot_wider
resumen2 <- datos %>%
mutate(categoria_riesgo = ifelse(probabilidad<0.7, "baja", ifelse(probabilidad < 0.85, "media", "alta"))) %>%
group_by(semana, categoria_riesgo) %>%
summarize(n_clientes = n_distinct(id_client)) %>%
tidyr::pivot_wider(names_from = "semana", values_from = "n_clientes")
View(resumen2)
resumen2 <- datos %>%
mutate(categoria_riesgo = ifelse(probabilidad<0.7, "baja", ifelse(probabilidad < 0.85, "media", "alta"))) %>%
group_by(semana, categoria_riesgo) %>%
summarize(n_clientes = n_distinct(id_client)) %>%
tidyr::pivot_wider(names_from = "categoria_riesgo", values_from = "n_clientes")
View(resumen2)
View(resumen1)
