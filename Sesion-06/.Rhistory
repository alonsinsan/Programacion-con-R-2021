setwd("~/personal/BEDU/Programacion con R/Programacion-con-R-2021/Sesion-06")
install.packages('TSA')
library(TSA)
data(oilfilters); plot(oilfilters, type = "o", ylab = "Ventas", xlab = "Tiempo", main = "Ventas Mesuales ")
plot(oilfilters, type = "l", ylab = "Ventas", xlab = "Tiempo",
main = "Ventas Mensuales de Filtro de Aceite",
sub = "Símbolos Especiales")
points(y = oilfilters, x = time(oilfilters),
pch = as.vector(season(oilfilters)))
data(AirPassengers)
AP <- AirPassengers
AP
class(AP)
start(AP); end(AP); frequency(AP)
summary(AP)
plot(AP, ylab = "Pasajeros (1000's)", xlab = "Tiempo",
main = "Reserva de pasajeros aéreos internacionales",
sub = "Estados Unidos en el periodo 1949-1960")
layout(1:2)
plot(aggregate(AP), xlab = "Tiempo",
main = "Reserva de pasajeros aéreos internacionales",
sub = "Estados Unidos en el periodo 1949-1960")
plot(aggregate(AP), xlab = "Tiempo",
main = "Reserva de pasajeros aéreos internacionales",
sub = "Estados Unidos en el periodo 1949-1960")
plot(aggregate(AP), xlab = "Tiempo",
main = "Reserva de pasajeros aéreos internacionales",
sub = "Estados Unidos en el periodo 1949-1960")
boxplot(AP ~ cycle(AP),
xlab = "Boxplot de valores estacionales",
sub = "Estados Unidos en el periodo 1949-1960",
main = "Reserva de pasajeros aéreos internacionales")
dev.off()
CBE <- read.csv("cbe.csv", header = TRUE)
CBE <- read.csv("Ejemplo-01/cbe.csv", header = TRUE)
CBE[1:4,]
class(CBE)
View(CBE)
Elec.ts <- ts(CBE[, 3], start = 1958, freq = 12)
Beer.ts <- ts(CBE[, 2], start = 1958, freq = 12)
Choc.ts <- ts(CBE[, 1], start = 1958, freq = 12)
plot(cbind(Elec.ts, Beer.ts, Choc.ts),
main = "Producción de Chocolate, Cerveza y Electricidad",
xlab = "Tiempo",
sub = "Enero de 1958 - Diciembre de 1990")
Global <- scan("Ejemplo-01/global.txt")
Global.ts <- ts(Global, st = c(1856, 1), end = c(2005, 12), fr = 12)
Global.annual <- aggregate(Global.ts, FUN = mean)
plot(Global.ts, xlab = "Tiempo", ylab = "Temperatura en Â°C", main = "Serie de Temperatura Global",
sub = "Serie mensual: Enero de 1856 a Diciembre de 2005")
New.series <- window(Global.ts, start = c(1970, 1), end = c(2005, 12))
New.time <- time(New.series)
plot(New.series, xlab = "Tiempo", ylab = "Temperatura en Â°C", main = "Serie de Temperatura Global",
sub = "Serie mensual: Enero de 1970 a Diciembre de 2005"); abline(reg = lm(New.series ~ New.time))
# Se debe elegir entre el modelo aditivo o el modelo multiplicativo cuando sea razonable suponer la descomposición
plot(Elec.ts)
Elec.decom.A <- decompose(Elec.ts)
plot(Elec.decom.A, xlab = "Tiempo",
sub = "Descomposición de los datos de producción de electricidad")
Tendencia <- Elec.decom.A$trend
Estacionalidad <- Elec.decom.A$seasonal
Aleatorio <- Elec.decom.A$random
ts.plot(cbind(Tendencia, Tendencia + Estacionalidad),
xlab = "Tiempo", main = "Datos de Producción de Electricidad",
ylab = "Producción de electricidad", lty = 1:2,
sub = "Tendencia con efectos estacionales aditivos sobrepuestos")
20
20
Tendencia[20] + Estacionalidad[20] + Aleatorio[20]
Elec.ts[20]
Elec.decom.M <- decompose(Elec.ts, type = "mult")
plot(Elec.decom.M, xlab = "Tiempo",
sub = "Descomposición de los datos de producción de electricidad")
Trend <- Elec.decom.M$trend
Seasonal <- Elec.decom.M$seasonal
Random <- Elec.decom.M$random
ts.plot(cbind(Trend, Trend*Seasonal), xlab = "Tiempo", main = "Datos de Producción de Electricidad",
ylab = "Producción de electricidad", lty = 1:2,
sub = "Tendencia con efectos estacionales multiplicativos sobrepuestos")
Trend[7]*Seasonal[7]*Random[7]
Elec.ts[7]
set.seed(1)
w <- rnorm(100)
set.seed(1)
w <- rnorm(100)
plot(w, type = "l", xlab = "")
title(main = "Ruido Blanco Gaussiano", xlab = "Tiempo")
x <- seq(-3, 3, length = 1000)
hist(rnorm(100), prob = T, ylab = "", xlab = "", main = "")
points(x, dnorm(x), type = "l")
title(ylab = "Densidad", xlab = "Valores simulados de la distribución normal estandar",
main = "Comparación de una muestra con su población subyacente")
set.seed(2)
acf(rnorm(100), main = "")
set.seed(21)
acf(rnorm(100), main = "")
set.seed(212)
acf(rnorm(100), main = "")
x <- w <- rnorm(1000)
w
for(t in 2:1000) x[t] <- x[t-1] + w[t]
plot(x, type = "l", main = "Caminata Aleatoria Simulada",
xlab = "t", ylab = expression(x[t]),
sub = expression(x[t]==x[t-1]+w[t]))
set.seed(2121)
x <- w <- rnorm(1000)
for(t in 2:1000) x[t] <- x[t-1] + w[t]
plot(x, type = "l", main = "Caminata Aleatoria Simulada",
xlab = "t", ylab = expression(x[t]),
sub = expression(x[t]==x[t-1]+w[t]))
set.seed(21212)
x <- w <- rnorm(1000)
for(t in 2:1000) x[t] <- x[t-1] + w[t]
plot(x, type = "l", main = "Caminata Aleatoria Simulada",
xlab = "t", ylab = expression(x[t]),
sub = expression(x[t]==x[t-1]+w[t]))
acf(x, main = "")
x
diff(x)
acf(diff(x), main = "")
title(main = "Correlograma de la serie de diferencias",
sub = expression(nabla*x[t]==x[t]-x[t-1]))
rho <- function(k, alpha) alpha^k
plot(0:10, rho(0:10, 0.7), type = "h", ylab = "", xlab = "")
plot(0:10, rho(0:10, 0.7), type = "h", ylab = "", xlab = "")
title(main = "Correlograma para un proceso AR(1)",
ylab = expression(rho[k] == alpha^k),
xlab = "lag k",
sub = expression(x[t]==0.7*x[t-1]+w[t]))
plot(0:10, rho(0:10, 0.7), type = "h", ylab = "", xlab = "")
plot(0:10, rho(0:10, -0.7), type = "h", ylab = "", xlab = "")
title(main = "Correlograma para un proceso AR(1)",
ylab = expression(rho[k] == alpha^k),
xlab = "lag k",
sub = expression(x[t]==-0.7*x[t-1]+w[t]))
set.seed(1)
x <- w <- rnorm(100)
for(t in 2:100) x[t] <- 0.7 * x[t-1] + w[t]
plot(x, type = "l", xlab = "", ylab = "")
title(main = "Proceso AR(1) simulado",
xlab = "Tiempo",
ylab = expression(x[t]),
sub = expression(x[t]==0.7*x[t-1]+w[t]))
acf(x, main = "")
pacf(x, main = "")
x
x.ar <- ar(x, method = "mle")
x.ar$order
x.ar$ar
pacf(x, main = "")
x.ar$ar + c(-2, 2)*sqrt(x.ar$asy.var)
Global <- scan("global.txt")
Global <- scan("Ejemplo-02/global.txt")
Global.ts <- ts(Global, st = c(1856, 1), end = c(2005, 12), fr = 12)
Global.annual <- aggregate(Global.ts, FUN = mean)
plot(Global.ts, xlab = "Tiempo", ylab = "Temperatura en Â°C",
main = "Serie de Temperatura Global",
sub = "Serie mensual: Enero de 1856 a Diciembre de 2005")
plot(Global.annual, xlab = "Tiempo", ylab = "Temperatura en Â°C",
main = "Serie de Temperatura Global",
sub = "Serie anual de temperaturas medias: 1856 a 2005")
mean(Global.annual)
Global.ar <- ar(Global.annual, method = "mle")
Global.ar$order
Global.ar$ar
acf(Global.ar$res[-(1:Global.ar$order)], lag = 50, main = "")
set.seed(1)
b <- c(0.8, 0.6, 0.4)
x <- w <- rnorm(1000)
for(t in 4:1000){
for(j in 1:3) x[t] <- x[t] + b[j]*w[t-j]
}
plot(x, type = "l", ylab = expression(x[t]), xlab = "Tiempo t",
sub = expression(x[t] == w[t] + 0.8*w[t-1] + 0.6*w[t-2] + 0.4*w[t-3]),
main = "Serie de tiempo simulada de un proceso MA(3)")
acf(x, main = "")
x.ma <- arima(x, order = c(0, 0, 3))
x.ma
x.ma <- arima(x, order = c(1, 0, 3))
x.ma
x.ma <- arima(x, order = c(1, 1, 3))
x.ma
View(x.ma)
?arima
stats::predict(x.ma, n.ahead=3)
plot(x)
plot(x[950:1000])
plot(x[950:1000], type = 'l')
a <- stats::predict(x.ma, n.ahead=3)
View(a)
plot(c(x[950:1000],a$pred) , type = 'l')
x.ma <- arima(x, order = c(0, 0, 3))
a <- stats::predict(x.ma, n.ahead=3)
plot(c(x[950:1000],a$pred) , type = 'l')
x.ma
set.seed(1)
x <- arima.sim(n = 10000, list(ar = -0.6, ma = 0.5))
plot(x[1:100], type = "l", xlab = "")
coef(arima(x, order = c(1, 0, 1)))
mod.ar <- arima(x, order = c(1, 0, 1))
stats::predict(mod.ar, n.ahead = 50)
b <- stats::predict(mod.ar, n.ahead = 50)
plot(c(x,b$pred), type='l')
plot(x[9950:10000], type='l')
plot(c(x[9950:10000],b$pred), type='l')
b <- stats::predict(mod.ar, n.ahead = 100)
plot(x[9950:10000], type='l')
plot(c(x[9950:10000],b$pred), type='l')
b <- stats::predict(mod.ar, n.ahead = 5)
best.order <- c(0, 0, 0)
best.aic <- Inf
for(i in 0:2)for(j in 0:2){
model <- arima(resid(Elec.lm), order = c(i, 0, j))
fit.aic <- AIC(model)
if(fit.aic < best.aic){
best.order <- c(i, 0, j)
best.arma <- arima(resid(Elec.lm), order = best.order)
best.aic <- fit.aic
}
}
Time <- 1:length(Elec.ts)
CBE <- read.csv("Ejemplo-02/cbe.csv", header = TRUE)
Elec.ts <- ts(CBE[, 3], start = 1958, freq = 12)
plot(Elec.ts, xlab = "", ylab = "")
title(main = "Serie de Producción de Electricidad",
xlab = "Tiempo",
ylab = "Producción de electricidad")
Time <- 1:length(Elec.ts)
Imth <- cycle(Elec.ts)
Elec.lm <- lm(log(Elec.ts) ~ Time + I(Time^2) + factor(Imth))
for(i in 0:2)for(j in 0:2){
model <- arima(resid(Elec.lm), order = c(i, 0, j))
fit.aic <- AIC(model)
if(fit.aic < best.aic){
best.order <- c(i, 0, j)
best.arma <- arima(resid(Elec.lm), order = best.order)
best.aic <- fit.aic
}
}
best.order
acf(resid(best.arma), main = "")
new.time <- seq(length(Elec.ts)+1, length = 36)
new.data <- data.frame(Time = new.time, Imth = rep(1:12, 3))
View(new.data)
predict.lm <- predict(Elec.lm, new.data)
predict.arma <- predict(best.arma, n.ahead = 36)
elec.pred <- ts(exp(predict.lm + predict.arma$pred), start = 1991, freq = 12)
ts.plot(cbind(Elec.ts, elec.pred), lty = 1:2,
col = c("blue", "red"), xlab = "Tiempo",
ylab = "Producción de electricidad",
main = "Predicción de los datos de producción de electricidad",
sub = "Predicción de 36 meses")
View(new.data)
set.seed(1)
x <- w <- rnorm(200)
for(t in 2:200) x[t] <- 0.5 * x[t-1] + w[t]
plot(x, type = "l", xlab = "", ylab = "")
title(main = "Proceso AR(1) simulado",
xlab = "Tiempo",
ylab = expression(x[t]),
sub = expression(x[t]==0.5*x[t-1]+w[t]))
acf(x, main = "")
pacf(x, main = "")
x.ar <- ar(x, method = "mle")
x.ar$order
x.ar$ar
CBE <- read.csv("Ejemplo-03/cbe.csv", header = TRUE)
Elec.ts <- ts(CBE[, 3], start = 1958, freq = 12)
plot(Elec.ts, xlab = "", ylab = "")
title(main = "Serie de Producción de Electricidad Australiana",
ylab = "Producción de electricidad (GWh)",
xlab = "Tiempo")
plot(diff(Elec.ts), xlab = "", ylab = "")
plot(diff(log(Elec.ts)), xlab = "", ylab = "")
set.seed(1)
x <- w <- rnorm(1000)
for(i in 3:1000) x[i] <- 0.5*x[i-1] + x[i-1] - 0.5*x[i-2] + w[i] + 0.3*w[i-1]
plot(x, type = "l",
main = "Serie simulada de un modelo ARIMA(1, 1, 1)",
xlab = "Tiempo",
ylab = expression(x[t]),
sub = expression(x[t] == 0.5*x[t-1] + x[t-1] - 0.5*x[t-2] + w[t] + 0.3*w[t-1]))
arima(x, order = c(1, 1, 1))
x <- arima.sim(model = list(order = c(1, 1, 1), ar = 0.5, ma = 0.3), n = 1000)
arima(x, order = c(1, 1, 1))
Beer.ts <- ts(CBE[, 2], start = 1958, freq = 12)
plot(Beer.ts, xlab = "", ylab = "")
title(main = "Serie de Producción de Cerveza en Australia",
ylab = "Producción de Cerveza (Megalitros)",
xlab = "Mes")
Beer.ima <- arima(Beer.ts, order = c(0, 1, 1))
Beer.ima
acf(resid(Beer.ima), main = "")
Beer.1991 <- predict(Beer.ima, n.ahead = 12)
sum(Beer.1991$pred)
Beer.ts
apply(Beer.ts,2,sum)
s <- matrix(Beer.ts,ncol=12)
View(s)
?matrix
s <- matrix(Beer.ts,ncol=12, byrow=F)
View(s)
s <- matrix(Beer.ts,ncol=12, byrow=T)
View(s)
apply(s,2,sum)
sum(Beer.1991$pred)
View(s)
apply(s,1,sum)
plot(Elec.ts, xlab = "", ylab = "")
plot(log(Elec.ts), xlab = "", ylab = "")
Elec.AR <- arima(log(Elec.ts), order = c(1, 1, 0),
seas = list(order = c(1, 0, 0), 12))
Elec.MA <- arima(log(Elec.ts), order = c(0, 1, 1),
seas = list(order = c(0, 0, 1), 12))
AIC(Elec.AR)
AIC(Elec.MA)
get.best.arima <- function(x.ts, maxord = c(1, 1, 1, 1, 1, 1)){
best.aic <- 1e8
n <- length(x.ts)
for(p in 0:maxord[1])for(d in 0:maxord[2])for(q in 0:maxord[3])
for(P in 0:maxord[4])for(D in 0:maxord[5])for(Q in 0:maxord[6])
{
fit <- arima(x.ts, order = c(p, d, q),
seas = list(order = c(P, D, Q),
frequency(x.ts)), method = "CSS")
fit.aic <- -2*fit$loglik + (log(n) + 1)*length(fit$coef)
if(fit.aic < best.aic){
best.aic <- fit.aic
best.fit <- fit
best.model <- c(p, d, q, P, D, Q)
}
}
list(best.aic, best.fit, best.model)
}
best.arima.elec <- get.best.arima(log(Elec.ts),
maxord = c(2, 2, 2, 2, 2, 2))
best.fit.elec <- best.arima.elec[[2]]  # Modelo
best.arima.elec[[3]] # Tipo de modelo (órdenes)
best.fit.elec
acf(resid(best.fit.elec), main = "")
pr <- predict(best.fit.elec, 12)$pred
ts.plot(cbind(window(Elec.ts, start = 1981),
exp(pr)), col = c("blue", "red"), xlab = "")
title(main = "Predicción para la serie de producción de electricidad",
xlab = "Mes",
ylab = "Producción de electricidad (GWh)")
