a <- c("Henry", "Antonio","Iván", "Gerardo", "Daniel", "Juan", "Mariana")
a <- c("Henry", "Antonio","Iván", "Gerardo", "Daniel", "Juan", "Mariana","Jose Carlo")
sample(a,8)
?pivot_longer
setwd("~/personal/BEDU/Programacion con R/Programacion-con-R-2021/Sesion-06")
library(TSA)
data(oilfilters); plot(oilfilters, type = "o", ylab = "Ventas", xlab = "Tiempo", main = "Ventas Mesuales ")
oilfilters
plot(oilfilters, type = "l", ylab = "Ventas", xlab = "Tiempo",
main = "Ventas Mensuales de Filtro de Aceite",
sub = "Símbolos Especiales")
points(y = oilfilters, x = time(oilfilters),
pch = as.vector(season(oilfilters)))
data(AirPassengers)
AP <- AirPassengers
AP
start(AP); end(AP); frequency(AP)
summary(AP)
plot(AP, ylab = "Pasajeros (1000's)", xlab = "Tiempo",
main = "Reserva de pasajeros aéreos internacionales",
sub = "Estados Unidos en el periodo 1949-1960")
library(ggplot2)
ggplot(AP) + geom_line()
as.dataframe(AP)
as.data.frame(AP)
ggplot(as.data.frame(AP)) + geom_line(x=x)
s1 <- as.data.frame(AP)
s1 <- as.data.frame(AP); colnames(s1) <- "pasajeros"
ggplot(s1) + geom_line(aes(y=pasaejeros))
ggplot(s1) + geom_line(aes(y=pasajeros))
s1 <- as.data.frame(AP); colnames(s1) <- "pasajeros"; s1["ind"] <- row.names(s1)
ggplot(s1) + geom_line(aes(x = ind,y=pasajeros))
ggplot(s1) + geom_line(aes(x = ind,y=pasajeros, group = 1))
layout(1:2)
plot(aggregate(AP), xlab = "Tiempo",
main = "Reserva de pasajeros aéreos internacionales",
sub = "Estados Unidos en el periodo 1949-1960")
plot(aggregate(AP), xlab = "Tiempo",
main = "Reserva de pasajeros aéreos internacionales",
sub = "Estados Unidos en el periodo 1949-1960")
plot(aggregate(AP), xlab = "Tiempo",
main = "Reserva de pasajeros aéreos internacionales",
sub = "Estados Unidos en el periodo 1949-1960")
boxplot(AP ~ cycle(AP),
xlab = "Boxplot de valores estacionales",
sub = "Estados Unidos en el periodo 1949-1960",
main = "Reserva de pasajeros aéreos internacionales")
dev.off()
setwd("~/personal/BEDU/Programacion con R/Programacion-con-R-2021/Sesion-06/Ejemplo-01")
CBE <- read.csv("cbe.csv", header = TRUE)
View(CBE)
CBE[1:4,]
class(CBE)
Elec.ts <- ts(CBE[, 3], start = 1958, freq = 12)
Elec.ts
Beer.ts <- ts(CBE[, 2], start = 1958, freq = 12)
Choc.ts <- ts(CBE[, 1], start = 1958, freq = 12)
plot(cbind(Elec.ts, Beer.ts, Choc.ts),
main = "Producción de Chocolate, Cerveza y Electricidad",
xlab = "Tiempo",
sub = "Enero de 1958 - Diciembre de 1990")
Global <- scan("global.txt")
Global.ts <- ts(Global, st = c(1856, 1), end = c(2005, 12), fr = 12)
Global.annual <- aggregate(Global.ts, FUN = mean)
Global.annual <- aggregate(Global.ts, FUN = mean); frequency(Global.annual)
Global.ts <- ts(Global, st = c(1856, 1), end = c(2005, 12), fr = 12); frequency(Global.ts)
plot(Global.ts, xlab = "Tiempo", ylab = "Temperatura en Â°C", main = "Serie de Temperatura Global",
sub = "Serie mensual: Enero de 1856 a Diciembre de 2005")
plot(Global.annual, xlab = "Tiempo", ylab = "Temperatura en Â°C", main = "Serie de Temperatura Global",
sub = "Serie anual de temperaturas medias: 1856 a 2005")
New.series <- window(Global.ts, start = c(1970, 1), end = c(2005, 12))
New.time <- time(New.series)
plot(New.series, xlab = "Tiempo", ylab = "Temperatura en Â°C", main = "Serie de Temperatura Global",
sub = "Serie mensual: Enero de 1970 a Diciembre de 2005"); abline(reg = lm(New.series ~ New.time))
?decompose
# Se debe elegir entre el modelo aditivo o el modelo multiplicativo cuando sea razonable suponer la descomposición
Elec.decom.A <- decompose(Elec.ts)
View(Elec.decom.A)
plot(Elec.decom.A, xlab = "Tiempo",
sub = "Descomposición de los datos de producción de electricidad")
Tendencia <- Elec.decom.A$trend
Estacionalidad <- Elec.decom.A$seasonal
Aleatorio <- Elec.decom.A$random
ts.plot(cbind(Tendencia, Tendencia + Estacionalidad),
xlab = "Tiempo", main = "Datos de Producción de Electricidad",
ylab = "Producción de electricidad", lty = 1:2,
sub = "Tendencia con efectos estacionales aditivos sobrepuestos")
Tendencia[20] + Estacionalidad[20] + Aleatorio[20]
Elec.ts[20]
Elec.decom.M <- decompose(Elec.ts, type = "mult")
View(Elec.decom.M)
plot(Elec.decom.M, xlab = "Tiempo",
sub = "Descomposición de los datos de producción de electricidad")
Trend <- Elec.decom.M$trend
Seasonal <- Elec.decom.M$seasonal
Random <- Elec.decom.M$random
ts.plot(cbind(Trend, Trend*Seasonal), xlab = "Tiempo", main = "Datos de Producción de Electricidad",
ylab = "Producción de electricidad", lty = 1:2,
sub = "Tendencia con efectos estacionales multiplicativos sobrepuestos")
Trend[7]*Seasonal[7]*Random[7]
Elec.ts[7]
w <- rnorm(100)
plot(w, type = "l", xlab = "")
title(main = "Ruido Blanco Gaussiano", xlab = "Tiempo")
x <- seq(-3, 3, length = 1000)
hist(rnorm(100), prob = T, ylab = "", xlab = "", main = "")
points(x, dnorm(x), type = "l")
title(ylab = "Densidad", xlab = "Valores simulados de la distribución normal estandar",
main = "Comparación de una muestra con su población subyacente")
acf(rnorm(100), main = "")
title(main = "Función de Autocorrelación Muestral",
sub = "Valores simulados de la distribución normal estandar")
x <- w <- rnorm(1000)
for(t in 2:1000) x[t] <- x[t-1] + w[t]
plot(x, type = "l", main = "Caminata Aleatoria Simulada",
xlab = "t", ylab = expression(x[t]),
sub = expression(x[t]==x[t-1]+w[t]))
acf(x, main = "")
title(main = "Correlograma para la caminata aleatoria simulada",
sub = expression(x[t]==x[t-1]+w[t]))
acf(diff(x), main = "")
title(main = "Correlograma de la serie de diferencias",
sub = expression(nabla*x[t]==x[t]-x[t-1]))
rho <- function(k, alpha) alpha^k
plot(0:10, rho(0:10, 0.7), type = "h", ylab = "", xlab = "")
title(main = "Correlograma para un proceso AR(1)",
ylab = expression(rho[k] == alpha^k),
xlab = "lag k",
sub = expression(x[t]==0.7*x[t-1]+w[t]))
plot(0:10, rho(0:10, -0.7), type = "h", ylab = "", xlab = "")
title(main = "Correlograma para un proceso AR(1)",
ylab = expression(rho[k] == alpha^k),
xlab = "lag k",
sub = expression(x[t]==-0.7*x[t-1]+w[t]))
abline(h = 0)
x <- w <- rnorm(100)
for(t in 2:100) x[t] <- 0.7 * x[t-1] + w[t]
plot(x, type = "l", xlab = "", ylab = "")
title(main = "Proceso AR(1) simulado",
xlab = "Tiempo",
ylab = expression(x[t]),
sub = expression(x[t]==0.7*x[t-1]+w[t]))
acf(x, main = "")
title(main = "Correlograma del proceso AR(1) simulado",
sub = expression(x[t]==0.7*x[t-1]+w[t]))
pacf(x, main = "")
title(main = "Correlograma Parcial del proceso AR(1) simulado",
sub = expression(x[t]==0.7*x[t-1]+w[t]))
x.ar <- ar(x, method = "mle")
x.ar$order
x.ar$ar
x.ar$ar + c(-2, 2)*sqrt(x.ar$asy.var)
for(t in 2:100) x[t] <- 0.7 * x[t-1]
plot(x, type = "l", xlab = "", ylab = "")
title(main = "Proceso AR(1) simulado",
xlab = "Tiempo",
ylab = expression(x[t]),
sub = expression(x[t]==0.7*x[t-1]+w[t]))
acf(x, main = "")
x.ar <- ar(x, method = "mle")
for(t in 2:100) x[t] <- 0.7 * x[t-1] + w[t]
x.ar <- ar(x, method = "mle")
x.ar$order
x.ar$ar
x.ar$ar + c(-2, 2)*sqrt(x.ar$asy.var)
Global <- scan("global.txt")
Global.ts <- ts(Global, st = c(1856, 1), end = c(2005, 12), fr = 12)
Global.annual <- aggregate(Global.ts, FUN = mean)
plot(Global.ts, xlab = "Tiempo", ylab = "Temperatura en Â°C",
main = "Serie de Temperatura Global",
sub = "Serie mensual: Enero de 1856 a Diciembre de 2005")
plot(Global.annual, xlab = "Tiempo", ylab = "Temperatura en Â°C",
main = "Serie de Temperatura Global",
sub = "Serie anual de temperaturas medias: 1856 a 2005")
mean(Global.annual)
#
acf(Global.annual)
Global.ar <- ar(Global.annual, method = "mle")
Global.ar$order
Global.ar$ar
acf(Global.ar$res[-(1:Global.ar$order)], lag = 50, main = "")
title(main = "Correlograma de la serie de residuales",
sub = "Modelo AR(4) ajustado a la serie de temperaturas globales anuales")
rho <- function(k, beta){
q <- length(beta) - 1
if(k > q) ACF <- 0 else {
s1 <- 0; s2 <- 0
for(i in 1:(q-k+1)) s1 <- s1 + beta[i]*beta[i + k]
for(i in 1:(q+1)) s2 <- s2 + beta[i]^2
ACF <- s1/s2}
ACF}
beta <- c(1, 0.7, 0.5, 0.2)
rho.k <- rep(1, 10)
for(k in 1:10) rho.k[k] <- rho(k, beta)
plot(0:10, c(1, rho.k), ylab = expression(rho[k]), xlab = "lag k", type = "h",
sub = expression(x[t] == w[t] + 0.7*w[t-1] + 0.5*w[t-2] + 0.2*w[t-3]),
main = "Función de autocorrelación para un proceso MA(3)")
abline(0, 0)
set.seed(1)
b <- c(0.8, 0.6, 0.4)
x <- w <- rnorm(1000)
for(t in 4:1000){
for(j in 1:3) x[t] <- x[t] + b[j]*w[t-j] # x[t] + b[1]*x[t-1] + b[2]*x[t-2] +b[3]*x[t-3]
}
plot(x, type = "l", ylab = expression(x[t]), xlab = "Tiempo t",
sub = expression(x[t] == w[t] + 0.8*w[t-1] + 0.6*w[t-2] + 0.4*w[t-3]),
main = "Serie de tiempo simulada de un proceso MA(3)")
acf(x, main = "")
title(main = "Correlograma para un proceso MA(3) simulado",
sub = expression(x[t] == w[t] + 0.8*w[t-1] + 0.6*w[t-2] + 0.4*w[t-3]))
x.ma <- arima(x, order = c(0, 0, 3))
x.ma
x <- arima.sim(n = 10000, list(ar = -0.6, ma = 0.5))
plot(x[1:100], type = "l", xlab = "")
title(main = "Serie simulada", xlab = "Tiempo",
sub = expression(x[t] == -0.6*x[t-1] + w[t] + 0.5*w[t-1]))
coef(arima(x, order = c(1, 0, 1)))
#
acf(x)
coef(arima(x, order = c(1, 0, 0)))
CBE <- read.csv("cbe.csv", header = TRUE)
Elec.ts <- ts(CBE[, 3], start = 1958, freq = 12)
plot(Elec.ts, xlab = "", ylab = "")
title(main = "Serie de Producción de Electricidad",
xlab = "Tiempo",
ylab = "Producción de electricidad")
plot(log(Elec.ts), xlab = "", ylab = "")
title(main = "Serie-log de Producción de Electricidad",
xlab = "Tiempo",
ylab = "Log de Producción de electricidad")
Time <- 1:length(Elec.ts)
Imth <- cycle(Elec.ts)
Elec.lm <- lm(log(Elec.ts) ~ Time + I(Time^2) + factor(Imth))
acf(resid(Elec.lm), main = "")
plot(resid(Elec.lm), type = "l", main = "", xlab = "", ylab = "")
title(main = "Serie de residuales del modelo de regresión ajustado",
sub = "Serie de producción de electricidad",
xlab = "Tiempo",
ylab = "Residuales")
best.order <- c(0, 0, 0)
best.aic <- Inf
for(i in 0:2)for(j in 0:2){
model <- arima(resid(Elec.lm), order = c(i, 0, j))
fit.aic <- AIC(model)
if(fit.aic < best.aic){
best.order <- c(i, 0, j)
best.arma <- arima(resid(Elec.lm), order = best.order)
best.aic <- fit.aic
}
}
best.order
acf(resid(Elec.lm), main = "")
title(main = "Correlograma de la serie de residuales del modelo de regresión",
sub = "Serie de producción de electricidad")
acf(resid(best.arma), main = "")
title(main = "Serie de residuales del modelo ARMA(2, 0) ajustado",
sub = "Serie de residuales del modelo de regresión ajustado a los datos de electricidad")
new.time <- seq(length(Elec.ts)+1, length = 36)
new.data <- data.frame(Time = new.time, Imth = rep(1:12, 3))
predict.lm <- predict(Elec.lm, new.data)
elec.pred <- ts(exp(predict.lm + predict.arma$pred), start = 1991, freq = 12)
ts.plot(cbind(Elec.ts, elec.pred), lty = 1:2,
col = c("blue", "red"), xlab = "Tiempo",
ylab = "Producción de electricidad",
main = "Predicción de los datos de producción de electricidad",
sub = "Predicción de 36 meses")
elec.pred <- ts(exp(predict.lm + predict.arma$pred), start = 1991, freq = 12)
predict.arma <- predict(best.arma, n.ahead = 36)
elec.pred <- ts(exp(predict.lm + predict.arma$pred), start = 1991, freq = 12)
ts.plot(cbind(Elec.ts, elec.pred), lty = 1:2,
col = c("blue", "red"), xlab = "Tiempo",
ylab = "Producción de electricidad",
main = "Predicción de los datos de producción de electricidad",
sub = "Predicción de 36 meses")
ts.plot(cbind(Elec.ts, predict.arma), lty = 1:2,
col = c("blue", "red"), xlab = "Tiempo",
ylab = "Producción de electricidad",
main = "Predicción de los datos de producción de electricidad",
sub = "Predicción de 36 meses")
set.seed(1)
x <- w <- rnorm(200)
plot(x, type = "l", xlab = "", ylab = "")
title(main = "Proceso AR(1) simulado",
xlab = "Tiempo",
ylab = expression(x[t]),
sub = expression(x[t]==0.5*x[t-1]+w[t]))
acf(x, main = "")
title(main = "Correlograma del proceso AR(1) simulado",
sub = expression(x[t]==0.5*x[t-1]+w[t]))
for(t in 2:200) x[t] <- 0.5 * x[t-1] + w[t]
plot(x, type = "l", xlab = "", ylab = "")
title(main = "Proceso AR(1) simulado",
xlab = "Tiempo",
ylab = expression(x[t]),
sub = expression(x[t]==0.5*x[t-1]+w[t]))
acf(x, main = "")
title(main = "Correlograma del proceso AR(1) simulado",
sub = expression(x[t]==0.5*x[t-1]+w[t]))
pacf(x, main = "")
title(main = "Correlograma Parcial del proceso AR(1) simulado",
sub = expression(x[t]==0.5*x[t-1]+w[t]))
x.ar <- ar(x, method = "mle")
x.ar$order
x.ar$ar
View(x.ar)
x <- w <- rnorm(200)
for(t in 2:200) x[t] <- 0.5 * x[t-1] + w[t]
plot(x, type = "l", xlab = "", ylab = "")
title(main = "Proceso AR(1) simulado",
xlab = "Tiempo",
ylab = expression(x[t]),
sub = expression(x[t]==0.5*x[t-1]+w[t]))
set.seed(12)
x <- w <- rnorm(200)
for(t in 2:200) x[t] <- 0.5 * x[t-1] + w[t]
plot(x, type = "l", xlab = "", ylab = "")
